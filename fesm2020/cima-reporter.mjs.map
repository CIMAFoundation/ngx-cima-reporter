{"version":3,"file":"cima-reporter.mjs","sources":["../../../../projects/cima/reporter/src/lib/models/classes.ts","../../../../projects/cima/reporter/src/lib/services/reporter.service.ts","../../../../projects/cima/reporter/src/lib/services/geographic.service.ts","../../../../projects/cima/reporter/src/lib/components/map-component/map-component.component.ts","../../../../projects/cima/reporter/src/lib/components/map-component/map-component.component.html","../../../../projects/cima/reporter/src/lib/components/initialization/initialization.component.ts","../../../../projects/cima/reporter/src/lib/components/initialization/initialization.component.html","../../../../projects/cima/reporter/src/lib/components/print-layout/print-layout.component.ts","../../../../projects/cima/reporter/src/lib/components/print-layout/print-layout.component.html","../../../../projects/cima/reporter/src/lib/components/warning-pluvio/warning-pluvio.component.ts","../../../../projects/cima/reporter/src/lib/components/warning-pluvio/warning-pluvio.component.html","../../../../projects/cima/reporter/src/lib/components/warning-idro/warning-idro.component.ts","../../../../projects/cima/reporter/src/lib/components/warning-idro/warning-idro.component.html","../../../../projects/cima/reporter/src/lib/components/img-uploader/img-uploader.component.ts","../../../../projects/cima/reporter/src/lib/components/img-uploader/img-uploader.component.html","../../../../projects/cima/reporter/src/lib/components/prev-situation/prev-situation.component.ts","../../../../projects/cima/reporter/src/lib/components/prev-situation/prev-situation.component.html","../../../../projects/cima/reporter/src/lib/components/current-situation/current-situation.component.ts","../../../../projects/cima/reporter/src/lib/components/current-situation/current-situation.component.html","../../../../projects/cima/reporter/src/lib/components/expected-situation/expected-situation.component.ts","../../../../projects/cima/reporter/src/lib/components/expected-situation/expected-situation.component.html","../../../../projects/cima/reporter/src/lib/pages/home/home.component.ts","../../../../projects/cima/reporter/src/lib/pages/home/home.component.html","../../../../projects/cima/reporter/src/lib/components/reporter-app-container/reporter-app-container.component.ts","../../../../projects/cima/reporter/src/lib/components/reporter-app-container/reporter-app-container.component.html","../../../../projects/cima/reporter/src/lib/reporter.config.ts","../../../../projects/cima/reporter/src/lib/reporter-routing.module.ts","../../../../projects/cima/reporter/src/lib/reporter.module.ts","../../../../projects/cima/reporter/src/public-api.ts","../../../../projects/cima/reporter/src/cima-reporter.ts"],"sourcesContent":["import { CurrentReport, ForecastReport, PreviousReport, Report } from \"./interfaces\";\n\nexport class LocalReport implements Report {\n    title: string;\n    txt: string;\n    prevReport: PreviousReport;\n    date_creation: string;\n    analysisPeriod: string;\n    cumulLabel: string;\n    aggrLabel: string;\n    currReport: CurrentReport;\n    foreReport: ForecastReport;\n    constructor() {\n        this.analysisPeriod='PERIODO DI ANALISI';\n        this.cumulLabel='Cumulata';\n        this.aggrLabel='aggregazione';\n        this.date_creation= new Date().toLocaleDateString();\n        this.prevReport = undefined;\n        //  {\n        //     fromUTCSecond: 0,\n        //     toUTCSecond: 0,\n        //     text: '',\n        //     title: '',\n        //     nImgs: 1, \n        //     raings_title: 'Pluviometri',\n        //     hydros_title: 'Idrometri',\n        //     layers: [], \n        //     raings: [], \n        //     hydros: [], \n        //     raings_cumul: '1 Ora'\n        //   }\n        this.currReport = undefined;\n        // {\n        //     fromUTCSecond: 0,\n        //     toUTCSecond: 0,\n        //     text: '',\n        //     title: '',\n        //     nImgs: 1, \n        //     raings_title: 'Pluviometri',\n        //     hydros_title: 'Idrometri',\n        //     layers: [], //todo\n        //   }\n        this.foreReport= undefined; \n        // {\n        //     fromUTCSecond: 0,\n        //     toUTCSecond: 0,\n        //     text: '',\n        //     title: '',\n        //     nImgs: 1, \n        //     raings_title: 'Pluviometri',\n        //     hydros_title: 'Idrometri',\n        //     layers: [], \n        //   }\n    }\n    \n}\n\nexport class PrintLayout {\n    //ci saranno altri parametri?\n    numberOfImages: number;\n\n    constructor(nImgs: number) {\n        this.numberOfImages = nImgs;\n    }\n}","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { CimaEnvironment } from '@cima/commons';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Aggregation, Cumul, Layer, MapParameter, Report, Station, WarningAggregation } from '../models/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReporterService {\n  constructor(\n    @Inject('env') private env: CimaEnvironment,\n    private http: HttpClient\n  ) {}\n\n\n  private backend_url(relPath: string): string {\n    //https://acroweb3-portal-backend-test.cimafoundation.org/reporter/api/\n    return `https://acroweb3-portal-backend-test.cimafoundation.org/reporter/api/${relPath}`;\n    // return `http://localhost:8000/${relPath}`;\n    //return `${this.env.server.baseUrl}/reporter/${relPath}`;\n  }\n\n  private execute_get(url: string, httpParams: HttpParams=undefined): Observable<any> {\n    return this.http.get(this.backend_url(url),  { params: httpParams });\n  }\n\n  private execute_post(url: string, object: any): Observable<any> {\n    return this.http.post(this.backend_url(url), object).pipe(\n      map(\n        (data) => {\n          return data;\n        },\n        (error: any) => {\n          console.error(error);\n        }\n      )\n    );\n  }\n\n  public createReport(report: Report): Observable<Blob> {\n    return this.http.post(this.backend_url('create_report/'), report,{responseType: 'blob'});\n  }\n\n  /**\n   * Return aggregations layers\n   * @param aggregation\n   * @returns\n   */\n  public getWarning(aggregation: Aggregation): Observable<Layer> {\n    return this.execute_post('aggregation_warning/', aggregation).pipe(\n      map(\n        (data) => {\n          return data;\n        },\n        (error: any) => {\n          console.error(error);\n        }\n      )\n    );\n  }\n\n  /**\n   * Return pluvios\n   * @param regions:  list of regions separated by comma\n   * @param date_to: utc date in seconds\n   * @param cumul\n   * @returns array of stations\n   */\n  public getPluvio(regions: string, date_to: number, cumul: number, bbox: L.LatLngBounds): Observable<Station[]> {\n    return this.execute_post('list_pluvio/', {regions: (regions.length>0?regions:undefined), date_to: date_to, cumul: cumul,\n                                          lat_min: bbox.getSouth(), lat_max: bbox.getNorth(),\n                                          lon_min: bbox.getWest(), lon_max: bbox.getEast()\n                                            });\n  }\n\n  /**\n   * Return Hydros\n   * @param regions: list of regions separated by comma\n   * @param date_to: utc date in seconds\n   * @returns array of stations\n   */\n  public getHydro(regions: string, date_to: number, bbox: L.LatLngBounds): Observable<Station[]> {\n    return this.execute_post('list_hydro/',{regions: (regions.length>0?regions:undefined), date_to: date_to,\n                                                lat_min: bbox.getSouth(), lat_max: bbox.getNorth(),\n                                                lon_min: bbox.getWest(), lon_max: bbox.getEast()});\n  }\n\n\n  /**\n   * Create maps for previous state, SRI, SRI Adj, VMI, Heavy Rain warning, Snow Hunter and current state\n   * @param mapParameters\n   * @returns Layer (json)\n   */\n  public printMap(mapParameters: MapParameter): Observable<Layer> {\n    return this.execute_post('print_map/', mapParameters );\n  }\n\n  /**\n   *\n   * @param dataTypeId //enum?\n   * @param from\n   * @param to\n   * @returns\n   */\n  public getForecastDatasAvailability(dataTypeId: string, from: number, to: number): Observable<any> {\n    return this.execute_post('forecast_data_availability/',{dataTypeId: dataTypeId, from: from, to: to});\n  }\n\n  public getForecastData(dataTypeId: string, run: any): Observable<any> {\n    return this.execute_post('get_forecast_data/',{dataTypeId: dataTypeId, descr: run.descr, path: run.path});\n  }\n\n\n  public getAvailableCumul(): Observable<Cumul[]> {\n    //TODO LEGGERE DA BACKEND IN FUTURO\n    const cumulata=[\n      {\n        id:1,\n        value: 1,\n        descr: '1 Ora'\n      },\n      {\n        id:2,\n        value: 3,\n        descr: '3 Ore'\n      },\n      {\n        id:3,\n        value: 6,\n        descr: '6 Ore'\n      },\n      {\n        id:4,\n        value: 12,\n        descr: '12 Ore'\n      },\n      {\n        id:5,\n        value: 24,\n        descr: '24 Ore'\n      },\n      {\n        id:6,\n        value: 36,\n        descr: '36 Ore'\n      },\n      {\n        id:7,\n        value: 48,\n        descr: '48 Ore'\n      },\n      {\n        id:8,\n        value: 72,\n        descr: '72 Ore'\n      },\n      {\n        id:10,\n        value: 0,\n        descr: 'Time Range'\n      }\n    ]\n    return of(cumulata);\n  }\n\n  public getAvailablesWarnAggr(): Observable<WarningAggregation[]> {\n    //TODO LEGGERE DA BACKEND IN FUTURO\n    const aggWarning=[\n      {\n        id:1,\n        descr: 'Regione',\n        value:'regions_it'\n      },\n      {\n        id:2,\n        descr: 'Provincie',\n        value:'districts_it'\n      },\n      {\n        id:3,\n        descr: 'Comuni',\n        value:'municipalities_it'\n      },\n      {\n        id:4,\n        descr: 'Bacini',\n        value:'catchments_it'\n      },\n      {\n        id:5,\n        descr: 'Zone di Allertamento',\n        value:'warningareas_it'\n      },\n    ]\n    return of(aggWarning);\n  }\n\n  public getAvailableMaps(): Observable<any[]> {\n    const maps=[\n      {id: 1, value: 'RADAR_DPC_HDF5_SRI', description: 'SRI'},\n      {id: 2, value: 'RADAR_DPC_HDF5_SRIADJ_TEST', description: 'SRI Adjusted'},\n      {id: 3, value: 'RADAR_HDF5_VMI', description: 'VMI'},\n      {id: 4, value: 'RADAR_DPC_HRW', description: 'Heavy Rain Warning'},\n      {id: 5, value: 'SNOW_HUNTER', description: 'Snow Hunter'},\n    ]\n    return of(maps);\n  }\n\n  //SRI, SRI Adjusted, VMI, Heavy Rain Warning, Snow Hunter\n\n  public uploadImage(file: any, title: string): Observable<Layer> {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('title', title);\n    return this.execute_post('upload_img/', formData);\n  }\n\n\n  public getAncillaryLayer(idlayer: string): Observable<any> {\n     // https://dds.cimafoundation.org/sentinel/sentinelapi/aggr/layer/regions_it/\n     return this.http.get('https://dds.cimafoundation.org/sentinel/sentinelapi/aggr/layer/'+idlayer+'/');\n  }\n}\n\n\n","import { Injectable } from \"@angular/core\";\nimport { UntilDestroy } from \"@ngneat/until-destroy\";\nimport { BehaviorSubject, Observable, Subject } from \"rxjs\";\n\n\n\n\n@UntilDestroy()\n@Injectable({\n    providedIn: 'root',\n  })\n  export class GeographicService {\n    private selectedFeatures = new BehaviorSubject<any[]>([]);\n    private currentViews= new BehaviorSubject<any>(undefined);\n    //TODOO AGGIUNGERE RITAGLIO GEOGRAFICO\n    constructor() {}\n\n    public setViews(view: any){\n        this.currentViews.next(view);\n    }\n    public setFeatures(features: any[]){\n        this.selectedFeatures.next(features);\n    }\n\n    public onFeaturesChange(): Observable<any[]>{\n        return this.selectedFeatures.asObservable();\n    }\n    public onViewCange(): Observable<any> {\n        return this.currentViews.asObservable();\n    }\n\n\n  }","import { AfterViewInit, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport * as L from 'leaflet';\nimport 'leaflet-draw';\nimport { GeographicService } from '../../services/geographic.service';\nimport {\n  MatDialog,\n  MAT_DIALOG_DEFAULT_OPTIONS,\n} from '@angular/material/dialog';\nimport { ReporterService } from '../../services/reporter.service';\nimport {ConfirmDialogComponent, ConfirmDialogModel} from \"@cima/commons\";\n\n@Component({\n  selector: 'app-map-component',\n  templateUrl: './map-component.component.html',\n  styleUrls: ['./map-component.component.scss']\n})\nexport class MapComponentComponent implements OnInit, AfterViewInit {\n  @Output() selected=new EventEmitter<any[]>();\n  map: L.Map;\n  mapLoading: boolean=false;\n  selectedFeautures: any[]=[];\n  private featuresStyle = {\n    default_style: {\n        stroke: true,\n        color: '#a5a59e',\n        weight: 2,\n        opacity: 1,\n\n        fill: true,\n        fillColor: '#a5a59e',\n        fillOpacity: 0\n    },\n    selected_style: {\n        stroke: false,\n        color: '#d23e3e',\n        weight: 2,\n        opacity: 1,\n\n        fill: true,\n        fillColor: '#d23e3e',\n        fillOpacity: 0.4\n    }\n  }\n\n  public view: any=undefined;\n\n  constructor(private reportService: ReporterService,\n    private geoService: GeographicService, private dialog: MatDialog) { }\n\n\n  private initDrawTool() {\n\n\n    var drawnItems = new L.FeatureGroup();\n    this.map.addLayer(drawnItems);\n    var drawControl = new L.Control.Draw({\n        edit: {\n            featureGroup: drawnItems\n        }\n    });\n    this.map.addControl(drawControl);\n  }\n\n\n\n  private initMap() {\n    this.mapLoading = true;\n    this.map = L.map('main_map').setView([0, 0], 1);;\n    //6.7499552751, 36.619987291, 18.4802470232, 47.1153931748\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(this.map);\n\n    this.map.fitBounds([[36.619987291,6.7499552751 ],[47.1153931748,18.4802470232]])\n\n    //this.initDrawTool();\n    this.map.invalidateSize(true);\n    this._setView();\n  }\n\n  ngAfterViewInit(): void {\n    this.initMap();\n\n  }\n\n  public resetView() {\n    this.map.flyTo([this.view.lat, this.view.lon],this.view.zoom);\n  }\n  private _setView() {\n    this.view={\n      lon: this.map.getCenter().lng,\n      lat: this.map.getCenter().lat,\n      zoom: this.map.getZoom(),\n      bbox: this.map.getBounds()\n    }\n    console.log(this.view.bbox.toBBoxString());\n    this.geoService.setViews(this.view);\n  }\n\n  public setView(){\n/*    if (this.view !== undefined && !confirm('Procedendo alcuni parametri basati sul ritaglio verrano resettati. Vuoi procedere?')){\n      this.resetView();\n    } else this._setView();*/\n    const dialogData = new ConfirmDialogModel(\n      $localize`Conferma operazione`,\n      $localize`Procedendo alcuni parametri basati sul ritaglio verrano resettati. Vuoi procedere?`\n    );\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: dialogData,\n    });\n\n    dialogRef.afterClosed().subscribe((dialogResult:any) => {\n      if (dialogResult) {\n        this._setView()\n      } else {\n        this.resetView();\n      }\n    });\n\n  }\n\n\n\n\n\n\n  private updateSelected() {\n    var sels: any[]=[];\n    this.selectedFeautures.forEach(\n      itm => sels.push(itm.properties.nome_reg)\n    );\n    this.selected.emit(sels);\n  }\n\n  private loadFeautures(data: any){\n    L.geoJSON(data,{\n      style: (feature) => {\n        return this.featuresStyle.default_style;\n      },\n      onEachFeature: (feature: any, mlayer: any) => {\n        if (feature.properties) {\n          feature.properties.id = feature.id;\n          // if (this.styleProperties && this.styleProperties.tooltip) {\n          //   mlayer.bindTooltip(this.styleProperties.tooltip(feature.properties));\n          // }\n          // mlayer.bindTooltip(feature.properties.cod_area + '<br>' + feature.properties.nome_area);\n        }\n        mlayer.on('click', () => {\n            // if (this.selectionEnabled) {\n              feature.selected = !feature.selected;\n              if (feature.selected) {\n                mlayer.setStyle(this.featuresStyle.selected_style);\n                this.selectedFeautures.push(feature);\n              } else {\n                this.selectedFeautures = this.selectedFeautures.filter( itm => itm.properties.gid !== feature.properties.gid);\n                mlayer.setStyle(this.featuresStyle.default_style);\n              }\n              this.updateSelected();\n              console.log(this.selectedFeautures);\n              //this.selectedlayersChange.emit(this.selectedlayers);\n            // } else {\n            //   this.jsonlayer.resetStyle();\n            //   mlayer.setStyle(this.availableStyles.selected_style);\n            // }\n            //this.layerclick.emit(feature);\n        });\n      }\n    }\n      ).addTo(this.map);\n  }\n  ngOnInit(): void {\n    this.reportService.getAncillaryLayer('regions_it').subscribe(\n      data => {\n        console.log(data);\n        this.loadFeautures(data);\n      }\n    )\n  }\n\n}\n","<ng-container >\n  <div class=\"d-flex justify-content-between align-items-center mb-2\">\n    <h2 class=\"m-0\">Area Geografica di analisi</h2>\n    <div class=\"d-flex\">\n      <button mat-flat-button color=\"\" [disabled]=\"!view\" (click)=\"resetView()\"class=\"bg-warning me-2\">\n        <span class=\"fas fa-redo-alt me-2\"></span>Ripristina\n      </button>\n      <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"setView()\">\n        <span class=\"fas fa-crop me-2\"></span>Imposta ritaglio\n      </button>\n    </div>\n\n  </div>\n</ng-container>\n<div class=\"big-map\" id=\"main_map\"></div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {TextEditorComponentConfig} from \"@cima/commons\";\nimport { Report } from '../../models/interfaces';\nimport { GeographicService } from '../../services/geographic.service';\n\n@Component({\n  selector: 'reporter-initialization',\n  templateUrl: './initialization.component.html',\n  styleUrls: ['./initialization.component.scss']\n})\nexport class InitializationComponent implements OnInit {\n  @Input() report: Report;\n  @Output() reportChange = new EventEmitter<Report>();\n \n\n  // public title:string='Bollettino speditivo di monitoraggio'\n  // public text: string = '<span>Monitoraggio delle precipitazioni</span><br><span>Valutazione delle precipitazioni delle ultime ore</span>';\n  public config: TextEditorComponentConfig = {height:'200px', placeholder: 'Testo...'}\n\n  constructor(private geoService: GeographicService) { }\n\n  ngOnInit(): void {\n    this.report.title='Bollettino speditivo di monitoraggio';\n    this.report.txt='Testo...';\n  }\n\n  public featuresSelected(event: any) {\n    //aggiorna service\n    this.geoService.setFeatures(event);\n  }\n\n}\n","<div class=\"row\">\n\n  <!--titolo-->\n  <div class=\"col-12\">\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Titolo</mat-label>\n      <input name=\"title\" [(ngModel)]=\"report.title\" matInput placeholder=\"Bollettino speditivo di monitoraggio\" required>\n    </mat-form-field>\n  </div>\n\n  <!--testo-->\n  <div class=\"col-12\">\n    <cima-text-editor [(text)]=\"report.txt\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--mappa-->\n  <div class=\"col-12 my-2\" >\n    <!--<h2 class=\"mb-1 mt-3\">Area Geografica di analisi</h2>-->\n    <div class=\"map-container\">\n      <app-map-component (selected)=\"featuresSelected($event)\" ></app-map-component>\n      <!-- <iframe width=\"100%\" height=\"450\"  src=\"https://www.openstreetmap.org/export/embed.html?bbox=-0.3592094779014588%2C37.813520326534004%2C19.789716303348545%2C46.09556117015435&amp;layer=mapnik\" style=\"border: 0px solid black\"></iframe> -->\n    </div>\n  </div>\n\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { PrintLayout } from '../../models/classes';\n\n\n@Component({\n  selector: 'reporter-print-layout',\n  templateUrl: './print-layout.component.html',\n  styleUrls: ['./print-layout.component.scss']\n})\nexport class PrintLayoutComponent implements OnInit {\n  @Output() selected = new EventEmitter<PrintLayout>();\n\n  //TODO: LEGGERE DA BACKEND IN FUTURO?\n  layouts= [  \n      new PrintLayout(1),\n      new PrintLayout(2),\n      new PrintLayout(4)];\n  \n  layoutSelected=0\n\n  constructor() { }\n\n  public setLayout(idlayout: number){\n    this.layoutSelected=idlayout;\n    this.selected.emit(this.layouts[idlayout]);\n  }\n\n  ngOnInit(): void {\n    this.selected.emit(this.layouts[this.layoutSelected]);\n  }\n\n}\n","<h2 class=\"mb-2 mt-3 border-bottom\">Layout di Stampa</h2>\n<div class=\"d-flex\">\n\n  <div class=\"layout-wrapper d-flex flex-column align-items-center justify-content-center me-3\"\n       [ngClass]=\"layoutSelected == 0? 'selected':''\"\n       (click)=\"setLayout(0)\">\n    <img class=\"img-layout\" src=\"assets/reporter/img/1img.png\">\n    <span class=\"my-1\">{{layouts[0].numberOfImages}} Immagine</span>\n    <div class=\"selection-bullet\"></div>\n  </div>\n\n  <div class=\"layout-wrapper d-flex flex-column align-items-center justify-content-center me-3\"\n       [ngClass]=\"layoutSelected == 1? 'selected':''\"\n       (click)=\"setLayout(1)\">\n    <img class=\"img-layout\" src=\"assets/reporter/img/2img.png\">\n    <span class=\"my-1\">{{layouts[1].numberOfImages}} Immagini</span>\n    <div class=\"selection-bullet\"></div>\n  </div>\n\n  <div class=\"layout-wrapper d-flex flex-column align-items-center justify-content-center me-3\"\n       [ngClass]=\"layoutSelected == 2? 'selected':''\"\n       (click)=\"setLayout(2)\">\n    <img class=\"img-layout\" src=\"assets/reporter/img/4img.png\">\n    <span class=\"my-1\">{{layouts[2].numberOfImages}} Immagini</span>\n    <div class=\"selection-bullet\"></div>\n  </div>\n\n</div>\n\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { SnackbarService } from '@cima/commons';\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { MiddleReport, WarningAggregation } from '../../models/interfaces';\nimport {FakeDataService} from \"../../services/fake-data.service\";\nimport { GeographicService } from '../../services/geographic.service';\nimport { ReporterService } from '../../services/reporter.service';\n\n@Component({\n  selector: 'reporter-warning-pluvio',\n  templateUrl: './warning-pluvio.component.html',\n  styleUrls: ['./warning-pluvio.component.scss']\n})\nexport class WarningPluvioComponent implements OnInit, OnChanges {\n  @Input() disabled: boolean=false;\n  @Input() report: MiddleReport; //TODO CAMBIARE CON DATA\n  @Output() warningChange = new EventEmitter<any[]>();\n\n  public aggrWarning$:\n        Observable<WarningAggregation[]>=this.reportService.getAvailablesWarnAggr();\n  private view: any=undefined;\n  private viewSubscription: Subscription;\n  public disabled$ = new BehaviorSubject<boolean>(true);\n  constructor(private reportService: ReporterService,\n          private geoService: GeographicService,\n          private snackBar: SnackbarService) { }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.disabled && changes.disabled.currentValue!=changes.disabled.previousValue)\n      this.changeControlStatus();\n\n\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n  private changeControlStatus(){\n\n    if (this.disabled) {\n      if (this.viewSubscription) this.viewSubscription.unsubscribe();\n    } else{\n\n        this.viewSubscription = this.geoService.onViewCange().subscribe(\n            data=>{\n              console.log('warning pluvio ',this.disabled,data);\n              this.view=data;\n              this.resetWarningPluvio();\n              this.updateControlStatus();\n            }\n          );\n      }\n\n  }\n  private updateControlStatus(disable: boolean=false) {\n    this.disabled$.next(this.view==undefined || this.disabled || disable);\n  }\n\n  /*WARNINGPLUVIO*/\n  public warningsPluvio: any;\n\n  resetWarningPluvio() {\n    this.warningsPluvio = [\n      {\n        id:0,\n        aggregazione:''\n      }\n    ];\n    this.updateWarningLayers();\n  }\n\n  addWarningPluvio(){\n    this.warningsPluvio = [...this.warningsPluvio, {id:1, aggregazione:''}]\n  }\n  delWarningPluvio(item:any) {\n    this.warningsPluvio = this.warningsPluvio.filter((x: any) => x != item)\n  }\n\n  private updateWarningLayers(){\n    const layer: any[]=[];\n    this.warningsPluvio.forEach((item: any) => {\n      if (item.data)\n        layer.push(item.data);\n    });\n    this.warningChange.emit(layer);\n\n  }\n\n\n  public selectAggregation(aggr: string, warning: any) {\n\n      //this.disabled$.next(true);\n      this.updateControlStatus(true);\n      this.reportService.getWarning({\n        aggregation: aggr, type: 'national_PLUVIOMETRO', date_to: this.report.toUTCSecond,\n        lon: this.view.lon, lat: this.view.lat, zoom: this.view.zoom\n            })\n            .pipe(finalize(() => this.updateControlStatus(false)))\n            .subscribe(\n                data => {\n                  warning.data=data;\n                  this.updateWarningLayers();\n                },\n                error=>{\n                  console.error(error);\n                  this.snackBar.error('Si è verificato un errore durante la lettura dei warning pluviometrici', '', {duration:2000});\n                }\n            );\n  }\n\n}\n","<h3>Warnings Pluviometrici</h3>\n\n<div class=\"warningPluvio\" *ngFor=\"let warning of warningsPluvio, let i = index\">\n\n  <div class=\"item-list-big-bull bg-secondary\">\n    <span>{{i+1}}</span>\n  </div>\n\n  <mat-form-field appearance=\"fill\" class=\"w-100\">\n    <mat-label>Aggregazione</mat-label>\n    <mat-select  [(value)]=\"warning.selected\" (valueChange)=\"selectAggregation($event,warning)\" [disabled]=\"disabled$ | async\"> \n      <mat-option *ngFor=\"let aggregazione of aggrWarning$ | async\" [value]=\"aggregazione.value\">\n        {{aggregazione.descr}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <div class=\"del-btn-wrapper ms-2\">\n    <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\"  (click)=\"delWarningPluvio(warning)\"></span>\n  </div>\n\n</div>\n\n<button mat-flat-button color=\"primary\" class=\"bg-success\" [disabled]=\"disabled$ | async\" (click)=\"addWarningPluvio()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Warning Pluvio</button>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { SnackbarService } from '@cima/commons';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { MiddleReport, WarningAggregation } from '../../models/interfaces';\nimport {FakeDataService} from \"../../services/fake-data.service\";\nimport { GeographicService } from '../../services/geographic.service';\nimport { ReporterService } from '../../services/reporter.service';\n\n@Component({\n  selector: 'reporter-warning-idro',\n  templateUrl: './warning-idro.component.html',\n  styleUrls: ['./warning-idro.component.scss']\n})\nexport class WarningIdroComponent implements OnInit, OnChanges {\n\n  @Input() disabled: boolean=false;\n  @Input() report: MiddleReport;\n  @Output() warningChange = new EventEmitter<any[]>();\n  public aggrWarning$:\n        Observable<WarningAggregation[]>=this.reportService.getAvailablesWarnAggr();\n  private view: any=undefined;\n\n  public disabled$ = new BehaviorSubject<boolean>(true);\n  private viewSubscription: Subscription;\n\n  constructor(private reportService: ReporterService, private geoService: GeographicService,\n        private snackBar: SnackbarService) { }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.disabled && changes.disabled.currentValue!=changes.disabled.previousValue)\n      this.changeControlStatus();\n  }\n\n  ngOnInit(): void {\n\n  }\n  private changeControlStatus(){\n\n    if (this.disabled) {\n      if (this.viewSubscription) this.viewSubscription.unsubscribe();\n    } else{\n\n        this.viewSubscription = this.geoService.onViewCange().subscribe(\n            data=>{\n              console.log('warning pluvio ',this.disabled,data);\n              this.view=data;\n              this.resetWarningIdro();\n              this.updateControlStatus();\n            }\n          );\n      }\n\n  }\n\n  private updateControlStatus(disable: boolean=false) {\n    this.disabled$.next(this.view==undefined || this.disabled || disable);\n  }\n  /*WARNINGIDRO*/\n  public warningsIdro: any;\n\n  resetWarningIdro() {\n    this.warningsIdro = [\n      {\n        id:0,\n        aggregazione:''\n      }\n    ];\n    this.updateWarningLayers();\n  }\n\n  addWarningIdro(){\n    this.warningsIdro = [...this.warningsIdro, {id:1, aggregazione:''}]\n  }\n  delWarningIdro(item:any) {\n    this.warningsIdro = this.warningsIdro.filter((x: any) => x != item)\n  }\n\n  private updateWarningLayers(){\n    const layer: any[]=[];\n    this.warningsIdro.forEach((item: any) => {\n      console.log(item);\n      if (item.data)\n        layer.push(item.data);\n    });\n    this.warningChange.emit(layer);\n\n  }\n\n  public selectAggregation(aggr: string, warning: any) {\n    this.disabled$.next(true);\n    this.reportService.getWarning({\n        aggregation: aggr,\n        type: 'national_IDROMETRO',\n        date_to: this.report.toUTCSecond,\n        lon: this.view.lon, lat: this.view.lat, zoom: this.view.zoom\n      })\n      .pipe(finalize(() => this.disabled$.next(false)))\n      .subscribe(\n      data => {\n        warning.data=data;\n        this.updateWarningLayers();\n      },\n      error=>{\n        console.error(error);\n        this.snackBar.error('Si è verificato un errore durante la lettura dei warning idrometrici', '', {duration:2000});\n      }\n    );\n  }\n\n}\n","<h3>Warnings Idrometrici</h3>\n\n<div class=\"warningIdro\" *ngFor=\"let warning of warningsIdro, let i = index\">\n\n  <div class=\"item-list-big-bull bg-info\">\n    <span>{{i+1}}</span>\n  </div>\n\n  <mat-form-field appearance=\"fill\" class=\"w-100\">\n    <mat-label>Aggregazione</mat-label>\n    <mat-select [(value)]=\"warning.selected\" (valueChange)=\"selectAggregation($event,warning)\" [disabled]=\"disabled$ | async\">\n      <mat-option *ngFor=\"let aggregazione of aggrWarning$ | async\" [value]=\"aggregazione.value\">\n        {{aggregazione.descr}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <div class=\"del-btn-wrapper ms-2\">\n    <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delWarningIdro(warning)\"></span>\n  </div>\n\n</div>\n\n<button mat-flat-button color=\"primary\" class=\"bg-success\" [disabled]=\"disabled$ | async\" (click)=\"addWarningIdro()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Warning Idro</button>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { Layer } from '../../models/interfaces';\nimport {FakeDataService} from \"../../services/fake-data.service\";\nimport { ReporterService } from '../../services/reporter.service';\n\n@Component({\n  selector: 'reporter-img-uploader',\n  templateUrl: './img-uploader.component.html',\n  styleUrls: ['./img-uploader.component.scss']\n})\nexport class ImgUploaderComponent implements OnInit {\n  @Output() uploadedChange = new EventEmitter<Layer[]>();\n  \n  \n  public uploadedFiles: any[]=[];\n  public uploading: boolean=false;\n\n  constructor(private reporterService: ReporterService) { }\n\n  ngOnInit(): void {\n  }\n\n  /*UPLOAD FILES*/\n  delFile(file:any){\n    this.uploadedFiles = this.uploadedFiles.filter((x: any) => x != file)\n    this.notifyChange();\n  }\n\n  private notifyChange(){\n    const layers: Layer[]=[];\n    this.uploadedFiles.forEach(itm => layers.push(itm.layer));\n    this.uploadedChange.emit(layers);\n  }\n\n  public onFileChange(event: any) {\n    const reader = new FileReader();\n\n    if (event.target.files && event.target.files.length > 0) {\n      this.uploading = true;\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = () => {\n        const image = {id: this.uploadedFiles.length,name: event.target.files[0].name, src: reader.result as string, layer: {}}\n        \n        this.reporterService.uploadImage(event.target.files[0],image.name).subscribe(\n          data => {\n              image.layer=data;\n              this.uploadedFiles.push(image);\n              this.notifyChange()\n          },\n          error => {\n            console.error(error);\n            this.uploading=false;\n          }\n        )\n      }\n    }\n  }\n}\n","<h3>Immagini</h3>\n<!--file uploaded-->\n<div class=\"file-wrapper uploaded\" *ngFor=\"let file of uploadedFiles\">\n  <div class=\"preview\" [style.background-image]=\"'URL('+file.src+')'\"></div>\n  <div class=\"title\">\n    <a [href]=\"file.src\" target=\"_blank\">{{file.title}}</a>\n    <span class=\"del-btn ms-2 fas fa-trash-alt\" (click)=\"delFile(file)\"></span>\n  </div>\n</div>\n\n<!--upload-->\n<div class=\"file-wrapper upload\">\n  <input type=\"file\" (change)=\"onFileChange($event)\">\n</div>\n","import { importType } from '@angular/compiler/src/output/output_ast';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {SnackbarService, TextEditorComponentConfig} from \"@cima/commons\";\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { PrintLayout } from '../../models/classes';\nimport {Layer, PreviousReport, Station } from '../../models/interfaces';\nimport {FakeDataService} from \"../../services/fake-data.service\";\nimport { GeographicService } from '../../services/geographic.service';\nimport { ReporterService } from '../../services/reporter.service';\n\n\n@Component({\n  selector: 'reporter-prev-situation',\n  templateUrl: './prev-situation.component.html',\n  styleUrls: ['./prev-situation.component.scss']\n})\nexport class PrevSituationComponent implements OnInit {\n  @Input() previousReport: PreviousReport;\n  @Output() previousReportChange = new EventEmitter<PreviousReport>();\n\n\n\n  public sectionEnabled=false\n\n  public pluviometriTableEnabled=false\n  public idrometriTableEnabled=false\n\n  public textPrev: string = '<span>Situtazione pregressa...</span>';\n  public config: TextEditorComponentConfig = {height:'200px', placeholder: 'Situazione pregressa...'}\n  public dateFrom: any;\n  public dateTo: any;\n  public cumuls: any[];\n  public uploadedImageLayers: any[]=[];\n  public warningIdroLayers: any[]=[];\n  public warningPluvioLayers: any[]=[];\n  public pluvioCum: number=1;\n  public hydroStations: any[];\n  public pluvioStations: any[];\n  private selectedFeatures: string='';\n  private view: any=undefined;\n\n  /*RAINMAPS*/\n  public rainMaps: any[] = [ {\n    id:0,\n    timerange:''\n  }]\n\n  public mapDisabled=new BehaviorSubject<boolean>(true);\n  featureSubscription: Subscription=undefined;\n  viewSubscription: Subscription=undefined;\n\n  constructor(private reporterService: ReporterService,\n    private geoService: GeographicService,private snackBar: SnackbarService) { }\n\n\n  resetRainMaps(){\n    this.rainMaps= [{id:0,timerange:''}]\n    this.updateLayers();\n  }\n\n  addRainMaps(){\n    this.rainMaps = [...this.rainMaps, {id:0, timeRange:''}]\n  }\n\n  delRainMaps(item:any) {\n    this.rainMaps = this.rainMaps.filter((x: any) => x != item)\n  }\n\n\n  private updateLayers() {\n    this.previousReport.layers=[];\n    this.rainMaps.forEach(itm => {if (itm.data)  this.previousReport.layers.push(itm.data)});\n    this.warningIdroLayers.forEach( itm => this.previousReport.layers.push(itm));\n    this.warningPluvioLayers.forEach( itm => this.previousReport.layers.push(itm));\n    this.uploadedImageLayers.forEach(itm => this.previousReport.layers.push(itm));\n  }\n\n  public uploadedImageChange(event: any) {\n    this.uploadedImageLayers=event;\n    this.updateLayers();\n  }\n  public warnIdroChange(event: any) {\n    this.warningIdroLayers=event;\n    this.updateLayers();\n  }\n\n  public warnPluvioChange(event: any) {\n    this.warningPluvioLayers=event;\n    this.updateLayers();\n  }\n\n\n  public selectMap(cumValue: number, map: any) {\n    let mapParameter={\n      layer: 'RAINMAP_ITALY',\n      from: this.previousReport.fromUTCSecond,\n      to: this.previousReport.toUTCSecond,\n      description: '',\n      cumul: cumValue,\n      lon: this.view.lon,\n      lat: this.view.lat,\n      zoom: this.view.zoom\n    }\n    this.mapDisabled.next(true);\n    this.reporterService.printMap(mapParameter)\n      .pipe(\n        finalize(() => this.mapDisabled.next(false)))\n      .subscribe(\n        data => {\n          map.data=data;\n          this.updateLayers();\n        },\n        error => {\n          console.error(error);\n          this.snackBar.error('Si è verificato un errore duranta la generazione della mappa.', '', {duration:2000});\n        }\n      );\n\n  }\n\n  public selectPluvioCum(value: number) {\n      this.previousReport.raings_cumul = value + (value>1 ? ' Ore':'Ora');\n      this.loadStations();\n  }\n\n  dateUpdate() {\n    if (this.dateFrom)\n      this.previousReport.fromUTCSecond= Math.trunc(new Date(this.dateFrom).getTime()/1000);\n    if (this.dateTo)\n      this.previousReport.toUTCSecond= Math.trunc(new Date(this.dateTo).getTime()/1000);\n    this.loadStations();\n  }\n\n\n\n\n\n  public layoutChange(layout: PrintLayout) {\n    if (this.previousReport)\n      this.previousReport.nImgs = layout.numberOfImages;\n  }\n\n  public toggleStationAll(stationlist: Station[], listitem: any[], event: any) {\n      console.log('toggleall');\n      console.log(stationlist);\n      console.log(listitem);\n      console.log(event.checked);\n      stationlist.splice(0,stationlist.length);\n      listitem.forEach(itm => {\n        itm.selected = event.checked;\n      });\n      stationlist.push(...listitem.filter(itm => itm.selected));\n  }\n\n  public toggleStation(stationlist: Station[], listitem: any[], item: any, event: any) {\n      item.selected=event.checked;\n      stationlist.splice(0,stationlist.length);\n      stationlist.push(...listitem.filter( itm => itm.selected))\n  }\n\n  private loadStations() {\n    if (this.selectedFeatures.length>0 || (this.view && this.view.bbox)){\n        this.reporterService.getPluvio(this.selectedFeatures,this.previousReport.toUTCSecond,this.pluvioCum,this.view.bbox).subscribe(\n          data => {\n            console.log('stations',data);\n            this.pluvioStations=data;\n          },\n          error => {\n            console.error(error);\n            this.snackBar.error('Errore durante la lettura dei pluviometri', '', {duration:2000});\n          }\n        )\n        this.reporterService.getHydro(this.selectedFeatures,this.previousReport.toUTCSecond,this.view.bbox).subscribe(\n          data => {\n            this.hydroStations=data;\n            console.log('stations hydro ',data);\n          },\n          error => {\n            console.error(error);\n            this.snackBar.error('Errore durante la lettura degli idrometri', '', {duration:2000});\n          }\n        )\n    }\n  }\n  public enableReport(){\n    if (this.sectionEnabled){\n      this.previousReport = {\n        fromUTCSecond: 0,\n        toUTCSecond: 0,\n        text: '',\n        title: '',\n        nImgs: 1,\n        raings_title: 'Pluviometri',\n        hydros_title: 'Idrometri',\n        layers: [],\n        raings: [],\n        hydros: [],\n        raings_cumul: '1 Ora'\n        };\n        this.updateLayers();\n        this.dateUpdate();\n\n        this.featureSubscription=this.geoService.onFeaturesChange().subscribe(\n          data => {\n            this.selectedFeatures=data.join(',');\n            this.loadStations();\n          }\n        );\n\n        this.viewSubscription=this.geoService.onViewCange().subscribe(\n          data => {\n            this.view=data;\n            this.resetRainMaps();\n            this.mapDisabled.next(this.view===undefined);\n            this.loadStations();\n          }\n        );\n\n    } else{\n      if (this.viewSubscription) this.viewSubscription.unsubscribe();\n      if (this.featureSubscription) this.featureSubscription.unsubscribe();\n      this.previousReport= undefined;\n    }\n\n    this.previousReportChange.emit(this.previousReport);\n\n  }\n  ngOnInit(): void {\n    this.enableReport();\n\n    this.reporterService.getAvailableCumul().subscribe(\n      data => {\n        this.cumuls=data;\n      }\n    )\n\n\n    this.loadStations();\n  }\n\n}\n","<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\"  (change)=\"enableReport()\">\n  Includi Situazione Pregressa\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\" >\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n        <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\" *ngIf=\"sectionEnabled\">\n    <cima-text-editor [(text)]=\"previousReport.text\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout (selected)=\"layoutChange($event)\"></reporter-print-layout>\n \n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Mappe di Pioggia</h3>\n\n          <div class=\"rainMap\" *ngFor=\"let map of rainMaps, let i = index\">\n\n            <div class=\"item-list-big-bull\">\n              <span>{{i+1}}</span>\n            </div>\n\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\n              <mat-label>Cumulata</mat-label>\n              <mat-select [(value)]=\"map.selection\" (valueChange)=\"selectMap($event, map)\" [disabled]=\"mapDisabled | async\">\n                <mat-option *ngFor=\"let cumulata of cumuls\" [value]=\"cumulata.value\">\n                  {{cumulata.descr}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"del-btn-wrapper ms-2\">\n              <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delRainMaps(map)\"></span>\n            </div>\n\n          </div>\n\n          <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addRainMaps()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Mappa</button>\n\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-pluvio  [disabled]=\"!sectionEnabled\" [report]=\"previousReport\" (warningChange)=\"warnPluvioChange($event)\" ></reporter-warning-pluvio>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-idro   [disabled]=\"!sectionEnabled\" [report]=\"previousReport\" (warningChange)=\"warnIdroChange($event)\"></reporter-warning-idro>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--tabella pluvio -->\n  <div class=\"col-12 my-2\">\n\n    <!--pluviometri-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Pluviometri</h2>\n\n    <div class=\"row\">\n\n      <div class=\"col-12 d-flex justify-content-between align-items-center\">\n        <!--abilitazione-->\n        <mat-slide-toggle\n          class=\"me-2\"\n          color=primary [(ngModel)]=\"pluviometriTableEnabled\">\n          Includi Pluviometri\n        </mat-slide-toggle>\n\n        <mat-form-field appearance=\"fill\" class=\"\">\n          <mat-label>Cumulata</mat-label>\n          <mat-select [(value)]=\"pluvioCum\" (valueChange)=\"selectPluvioCum($event)\">\n            <mat-option *ngFor=\"let cumulata of cumuls\" [value]=\"cumulata.value\">\n              {{cumulata.descr}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <!--tabella pluviometri-->\n      <div class=\"col-12 pluviometri-table\" [ngClass]=\"!pluviometriTableEnabled?'section-disabled':''\">\n\n        <table class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th scope=\"col\">\n              <mat-checkbox class=\"example-margin\" (change)=\"toggleStationAll(previousReport.raings,pluvioStations, $event)\"></mat-checkbox>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Stazione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca stazione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Comune</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca comune\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Provincia</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca provincia\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Regione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca regione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Valore</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca valore\">\n              </span>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let pluvio of pluvioStations\">\n              <td scope=\"row\">\n                <mat-checkbox class=\"example-margin\"  [checked]=\"pluvio.selected\" (change)=\"toggleStation(previousReport.raings,pluvioStations,pluvio,$event)\"></mat-checkbox>\n              </td>\n              <td>{{pluvio.stationname}}</td>\n              <td>{{pluvio.munic}}</td>\n              <td>{{pluvio.district}}</td>\n              <td>{{pluvio.region}}</td>\n              <td>{{pluvio.value}} {{pluvio.mu}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n    </div>\n\n  </div>\n\n  <!--tabella idro -->\n  <div class=\"col-12 my-2\">\n\n    <!--pluviometri-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Idrometri</h2>\n\n    <div class=\"row\">\n\n      <div class=\"col-12 d-flex justify-content-between align-items-center\">\n        <!--abilitazione-->\n        <mat-slide-toggle\n          class=\"me-2\"\n          color=primary [(ngModel)]=\"idrometriTableEnabled\">\n          Includi Idrometri \n        </mat-slide-toggle>\n\n      </div>\n\n      <!--tabella idrometri-->\n      <div class=\"col-12 pluviometri-table\" [ngClass]=\"!idrometriTableEnabled?'section-disabled':''\">\n\n        <table class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th scope=\"col\">\n              <mat-checkbox class=\"example-margin\" (change)=\"toggleStationAll(previousReport.hydros,hydroStations,$event)\"></mat-checkbox>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Stazione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca stazione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Comune</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca comune\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Provincia</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca provincia\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Regione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca regione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Valore</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca valore\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Superamento Soglia</span>\n              <select class=\"table-filter\" type=\"text\">\n                <option value=\"1\">Nussuna selezione</option>\n                <option value=\"1\">Bassa</option>\n                <option value=\"1\">Media</option>\n                <option value=\"1\">Elevata</option>\n                <option value=\"1\">Molto Elevata</option>\n                <option value=\"1\">Massima</option>\n              </select>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let hydro of hydroStations\">\n            <th scope=\"row\">\n              <mat-checkbox class=\"example-margin\"  [checked]=\"hydro.selected\" (change)=\"toggleStation(previousReport.hydros,hydroStations,hydro,$event)\"></mat-checkbox>\n            </th>\n            <td>{{hydro.stationname}}</td>\n            <td>{{hydro.munic}}</td>\n            <td>{{hydro.district}}</td>\n            <td>{{hydro.region}}</td>\n            <td>{{hydro.value}} {{hydro.mu}}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n    </div>\n\n  </div>\n</div>\n\n\n\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {SnackbarService, TextEditorComponentConfig} from \"@cima/commons\";\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { PrintLayout } from '../../models/classes';\nimport { CurrentReport } from '../../models/interfaces';\nimport {FakeDataService} from \"../../services/fake-data.service\";\nimport { GeographicService } from '../../services/geographic.service';\nimport { ReporterService } from '../../services/reporter.service';\n\n@Component({\n  selector: 'reporter-current-situation',\n  templateUrl: './current-situation.component.html',\n  styleUrls: ['./current-situation.component.scss']\n})\nexport class CurrentSituationComponent implements OnInit {\n  @Input() currentReport: CurrentReport;\n  @Output() currentReportChange = new EventEmitter<CurrentReport>();\n\n  public availableMaps: any[]=[];\n  public sectionEnabled=false\n\n  public dateFrom: any;\n  public dateTo: any;\n\n\n  public textCurrent: string = '<span>Situazione attuale...</span>';\n  public config: TextEditorComponentConfig = {height:'200px', placeholder: 'Situazione attuale...'}\n\n\n  public uploadedImageLayers: any[]=[];\n  public warningIdroLayers: any[]=[];\n  public warningPluvioLayers: any[]=[];\n  public view: any=undefined;\n  public mapDisabled= new BehaviorSubject<boolean>(true);\n  viewSubscription: Subscription;\n\n  constructor(private reportService: ReporterService, private geoService: GeographicService,\n      private snackBar: SnackbarService) { }\n\n\n\n  public enableReport(){\n    if (this.sectionEnabled){\n      this.currentReport = {\n        fromUTCSecond: 0,\n        toUTCSecond: 0,\n        text: '',\n        title: '',\n        nImgs: 1,\n        raings_title: 'Pluviometri',\n        hydros_title: 'Idrometri',\n        layers: [] //todo\n        };\n        this.viewSubscription=this.geoService.onViewCange().subscribe(\n          data => {\n            this.view=data;\n            this.mapDisabled.next(this.view===undefined);\n          }\n        )\n        this.updateLayers();\n        this.dateUpdate();\n    } else{\n      this.currentReport= undefined;\n      if (this.viewSubscription) this.viewSubscription.unsubscribe();\n    }\n\n    this.currentReportChange.emit(this.currentReport);\n\n  }\n\n  ngOnInit(): void {\n    this.enableReport();\n    this.reportService.getAvailableMaps().subscribe(\n      data => this.availableMaps=data\n    )\n\n\n\n  }\n  private updateLayers() {\n    this.currentReport.layers=[];\n    this.availableMaps.forEach(itm => {if (itm.selected && itm.data)  this.currentReport.layers.push(itm.data)});\n    this.warningIdroLayers.forEach( itm => this.currentReport.layers.push(itm));\n    this.warningPluvioLayers.forEach( itm => this.currentReport.layers.push(itm));\n    this.uploadedImageLayers.forEach(itm => this.currentReport.layers.push(itm));\n    console.log('layers',this.currentReport.layers);\n  }\n\n  public uploadedImageChange(event: any) {\n    console.log(event);\n    this.uploadedImageLayers=event;\n    this.updateLayers();\n  }\n  public warnIdroChange(event: any) {\n    console.log(event);\n    this.warningIdroLayers=event;\n    this.updateLayers();\n  }\n\n  public warnPluvioChange(event: any) {\n    this.warningPluvioLayers=event;\n    this.updateLayers();\n  }\n\n  public layoutChange(layout: PrintLayout) {\n    if (this.currentReport)\n      this.currentReport.nImgs = layout.numberOfImages;\n    console.log('report',this.currentReport);\n  }\n  //todo: gestire cambio ritaglio\n  selectMaps(map: any,value: any) {\n    map.selected=value.checked;\n    if (map.selected){\n      let mapParameter={\n        layer: map.value,\n        from: this.currentReport.fromUTCSecond,\n        to: this.currentReport.toUTCSecond,\n        description: map.description,\n        cumul: 3,\n        lon: this.view.lon,\n        lat: this.view.lat,\n        zoom: this.view.zoom\n      }\n\n      this.mapDisabled.next(true);\n\n      this.reportService.printMap(mapParameter)\n          .pipe(finalize(()=> this.mapDisabled.next(false)))\n          .subscribe(\n            data => {\n                map.data=data;\n                this.updateLayers();\n            },\n            error =>{\n              console.log(error);\n              this.snackBar.error('Errore durante il caricamento della mappa '+map.description, '', {duration:2000});\n              map.selected=false;\n            }\n          )\n    }\n  }\n\n  dateUpdate() {\n    if (this.dateFrom)\n      this.currentReport.fromUTCSecond= Math.trunc(new Date(this.dateFrom).getTime()/1000);\n    if (this.dateTo)\n      this.currentReport.toUTCSecond= Math.trunc(new Date(this.dateTo).getTime()/1000);\n  }\n}\n","<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\" (change)=\"enableReport()\">\n  Includi Situazione Attuale\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\">\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\" *ngIf=\"sectionEnabled\">\n    <cima-text-editor [(text)]=\"currentReport.text\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout (selected)=\"layoutChange($event)\"></reporter-print-layout>\n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Data</h3>\n          <div *ngFor=\"let map of availableMaps\" >\n            <mat-checkbox class=\"example-margin\"  [checked]=\"map.selected\" [disabled]=\"mapDisabled | async\" (change)=\"selectMaps(map,$event)\">{{map.description}}</mat-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-pluvio  [disabled]=\"!sectionEnabled\" [report]=\"currentReport\" (warningChange)=\"warnPluvioChange($event)\"></reporter-warning-pluvio>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-idro  [disabled]=\"!sectionEnabled\" [report]=\"currentReport\" (warningChange)=\"warnIdroChange($event)\"></reporter-warning-idro>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {SnackbarService, TextEditorComponentConfig} from \"@cima/commons\";\nimport { throwIfEmpty } from 'rxjs/operators';\nimport { PrintLayout } from '../../models/classes';\nimport { ForecastReport } from '../../models/interfaces';\nimport {FakeDataService} from \"../../services/fake-data.service\";\nimport { ReporterService } from '../../services/reporter.service';\n\n@Component({\n  selector: 'reporter-expected-situation',\n  templateUrl: './expected-situation.component.html',\n  styleUrls: ['./expected-situation.component.scss']\n})\nexport class ExpectedSituationComponent implements OnInit {\n  @Input() forecastReport: ForecastReport;\n  @Output() forecastReportChange = new EventEmitter<ForecastReport>();\n\n  public sectionEnabled=false\n\n\n  public textExpected: string = '<span>Situazione prevista...</span>';\n  public config: TextEditorComponentConfig = {height:'200px', placeholder: 'Situazione prevista...'}\n  public dateFrom: any;\n  public dateTo: any;\n  public rainMapDatas: any[]=[];\n  public snowMapDatas: any[]=[];\n  public geoMapDatas: any[]=[];\n  public uploadedImageLayers: any[]=[];\n\n\n\n\n  /*PREC RUN*/\n  public runsPrec: any[] = [\n    {\n      id:0,\n      run:''\n    }\n  ]\n  /*SNOW RUN*/\n  public runsSnow: any[] = [\n    {\n      id:0,\n      run:''\n    }\n  ]\n    /*GEOPOT RUN*/\n    public runsGeoPot: any[] = [\n      {\n        id:0,\n        run:''\n      }\n    ]\n\n  constructor(private reporterService: ReporterService, private snackBar: SnackbarService) { }\n\n\n  addRunPrec(){\n    this.runsPrec = [...this.runsPrec, {id:1, run:''}]\n  }\n  delRunPrec(item:any) {\n    this.runsPrec = this.runsPrec.filter((x: any) => x != item)\n  }\n\n\n  addRunSnow(){\n    this.runsSnow = [...this.runsSnow, {id:1, run:''}]\n  }\n  delRunSnow(item:any) {\n    this.runsSnow = this.runsSnow.filter((x: any) => x != item)\n  }\n\n\n  addRunGeoPot(){\n    this.runsGeoPot = [...this.runsGeoPot, {id:1, run:''}]\n  }\n\n  delRunGeoPot(item:any) {\n    this.runsGeoPot =\n    this.runsGeoPot.filter((x: any) => x != item)\n  }\n  public uploadedImageChange(event: any) {\n    console.log(event);\n    this.uploadedImageLayers=event;\n    this.updateLayers();\n  }\n\n  private updateLayers() {\n    this.forecastReport.layers=[];\n    this.runsPrec.forEach(itm => {if (itm.data)  this.forecastReport.layers.push(itm.data)});\n    this.runsSnow.forEach( itm => {if (itm.data) this.forecastReport.layers.push(itm.data)});\n    this.runsGeoPot.forEach( itm => {if (itm.data) this.forecastReport.layers.push(itm.data)});\n    this.uploadedImageLayers.forEach(itm => this.forecastReport.layers.push(itm));\n    console.log('layers',this.forecastReport.layers);\n  }\n\n  dateUpdate() {\n      if (this.dateFrom)\n        this.forecastReport.fromUTCSecond= Math.trunc(new Date(this.dateFrom).getTime()/1000);\n      if (this.dateTo)\n        this.forecastReport.toUTCSecond= Math.trunc(new Date(this.dateTo).getTime()/1000);\n      //this.loadStations();\n      this.loadForecastDatasAvailability();\n    }\n\n  public layoutChange(layout: PrintLayout) {\n    if (this.forecastReport)\n      this.forecastReport.nImgs = layout.numberOfImages;\n     console.log('report',this.forecastReport);\n  }\n\n  public selectMap(type: string,event: any,  prec: any) {\n      console.log('selected',event,prec);\n\n      //TODO\n      this.reporterService.getForecastData(type, event).subscribe(\n        data => {\n          console.log(data);\n          prec.data=data;\n          this.updateLayers();\n        },\n        error =>{\n          console.error(error);\n          this.snackBar.error(\"Errore durante il caricamento della mappa di previsione.\", '', {duration:2000});\n        }\n      );\n  }\n\n  private loadAvailability(dataType: string, listData: any[]) {\n    listData.splice(0,listData.length);\n    this.reporterService.getForecastDatasAvailability(dataType,\n        this.forecastReport.fromUTCSecond,\n        this.forecastReport.toUTCSecond).subscribe(\n          data => {\n            listData.push(...data.runs);\n          },\n          error => {\n            console.error(error);\n            this.snackBar.error('Si è verificato un errore durante la lettura dei dati.', '', {duration:2000})\n          }\n        )\n  }\n\n  private loadForecastDatasAvailability(){\n    //todo cancellare vecchi layers\n    if (this.forecastReport.fromUTCSecond>0 && this.forecastReport.toUTCSecond>0){\n        this.loadAvailability('ITALIA_PT',this.rainMapDatas);\n        this.loadAvailability('ITALIA_NT',this.snowMapDatas);\n        this.loadAvailability('EURATL_GGTT',this.geoMapDatas);\n    }\n  }\n\n  public enableReport() {\n    if (this.sectionEnabled){\n      this.forecastReport={\n        fromUTCSecond: 0,\n        toUTCSecond: 0,\n        text: '',\n        title: '',\n        nImgs: 1,\n        raings_title: 'Pluviometri',\n        hydros_title: 'Idrometri',\n        layers: [], //todo\n      }\n      this.updateLayers();\n      this.dateUpdate();\n      this.forecastReportChange.emit(this.forecastReport);\n    } else {\n      this.forecastReport=undefined;\n    }\n  }\n\n  ngOnInit(): void {\n      this.enableReport();\n  }\n\n\n}\n","<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\" (change)=\"enableReport()\">\n  Includi Situazione Prevista\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\">\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\">\n    <cima-text-editor [(text)]=\"textExpected\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout  (selected)=\"layoutChange($event)\"></reporter-print-layout>\n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <!--PRECIPITAZIONI-->\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Previsione Precipitazione cum. 6h</h3>\n          <div class=\"runPrec\" *ngFor=\"let prec of runsPrec, let i = index\">\n\n            <div class=\"item-list-big-bull bg-secondary\">\n              <span>{{i+1}}</span>\n            </div>\n\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\n              <mat-label>Seleziona run</mat-label>\n              <mat-select (valueChange)=\"selectMap('ITALIA_PT',$event, prec)\">\n                <mat-option *ngFor=\"let run of rainMapDatas\"  [value]=\"run\">\n                  {{run.descr}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"del-btn-wrapper ms-2\">\n              <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delRunPrec(prec)\"></span>\n            </div>\n\n          </div>\n\n          <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addRunPrec()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Run Precipitazioni</button>\n\n        </div>\n      </div>\n\n      <!--NEVE-->\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Previsione Neve cum. 6h</h3>\n          <div class=\"runPrec\" *ngFor=\"let snow of runsSnow, let i = index\">\n\n            <div class=\"item-list-big-bull bg-secondary\">\n              <span>{{i+1}}</span>\n            </div>\n\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\n              <mat-label>Seleziona run</mat-label>\n              <mat-select (valueChange)=\"selectMap('ITALIA_NT',$event, snow)\">\n                <mat-option *ngFor=\"let run of snowMapDatas\" [value]=\"run\">\n                  {{run.descr}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"del-btn-wrapper ms-2\">\n              <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delRunSnow(snow)\"></span>\n            </div>\n\n          </div>\n\n          <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addRunSnow()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Run Neve</button>\n\n        </div>\n      </div>\n\n      <!--GEOPOTENZIALI-->\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Previsione Geopotenziale cum. 6h  (500hpa)</h3>\n          <div class=\"runPrec\" *ngFor=\"let geo of runsGeoPot, let i = index\">\n\n            <div class=\"item-list-big-bull bg-secondary\">\n              <span>{{i+1}}</span>\n            </div>\n\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\n              <mat-label>Seleziona run</mat-label>\n              <mat-select (valueChange)=\"selectMap('EURATL_GGTT',$event, geo)\">\n                <mat-option *ngFor=\"let run of geoMapDatas\" [value]=\"run\">\n                  {{run.descr}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"del-btn-wrapper ms-2\">\n              <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delRunGeoPot(geo)\"></span>\n            </div>\n\n          </div>\n\n          <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addRunGeoPot()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Run Geopotenziale</button>\n\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n","import { Component, Inject } from '@angular/core';'@angular/forms';\nimport {\n  DEFAULT_TEXT_EDITOR_CONFIG,\n  TextEditorComponentConfig,\n} from '@cima/commons';\nimport { ReporterAppContainerComponent } from '../../../public-api';\nimport { LocalReport } from '../../models/classes';\nimport { Report } from '../../models/interfaces';\nimport { GeographicService } from '../../services/geographic.service';\nimport { ReporterService } from '../../services/reporter.service';\n\n@Component({\n  selector: 'cima-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n\n report: Report;\n\n loadingReport: boolean=false;\n\n\n\n\n  constructor(private reporterService: ReporterService,private geoService: GeographicService) {}\n\n  ngOnInit() {\n    this.report=new LocalReport();\n    // this.geoService.onViewCange().subscribe(\n    //   data =>{\n    //     this.report=new LocalReport();\n    //     alert(\"reset\");\n    //   }\n    // );\n  }\n\n  \n  public createReport() {\n \n    console.log(this.report);\n    this.loadingReport = true;\n    this.reporterService.createReport(this.report).subscribe(\n      data => {\n          const blob = new Blob([data], {type: 'application/octet-stream'});\n          var url = window.URL.createObjectURL(blob);\n          //window.open(url, '_blank');\n          var anchor = document.createElement(\"a\");\n          anchor.download = \"report.docx\";\n          anchor.href = url;\n          anchor.click();\n          console.log('Report creato');\n          console.log(data);\n          this.loadingReport = false;\n      },\n      error => {\n        this.loadingReport = false;\n        console.error(error);\n      }\n    )\n  }\n\n\n}\n","<mat-stepper #stepper [linear]=\"true\">\n\n  <!--lasciare numero al posto dell'icona-->\n  <ng-template matStepperIcon=\"edit\" let-index=\"index\">\n    {{index +1}}\n  </ng-template>\n\n  <!--STEP 1-->\n  <mat-step>\n      <ng-template matStepLabel>Inizializzazione </ng-template>\n    <div class=\"stepper-content-wrapper\">\n\n      <div class=\"stepper-content\">\n        <reporter-initialization [(report)]=\"report\"></reporter-initialization>\n      </div>\n\n      <div class=\"d-flex justify-content-end\">\n        <button mat-flat-button color=\"primary\" class=\"me-2\" matStepperNext>\n          Successivo<span class=\"fas fa-angle-right ms-2\"></span>\n        </button>\n      </div>\n\n    </div>\n  </mat-step>\n\n\n  <!--STEP 2-->\n  <mat-step>\n    <ng-template matStepLabel>Situazione Pregressa</ng-template>\n    <div class=\"stepper-content-wrapper\">\n\n      <div class=\"stepper-content\">\n        <reporter-prev-situation [(previousReport)]=\"report.prevReport\"></reporter-prev-situation>\n      </div>\n\n      <div class=\"d-flex justify-content-between\">\n        <button mat-flat-button color=\"primary\" class=\"me-2\" matStepperPrevious>\n          <span class=\"fas fa-angle-left me-2\"></span>Precedente\n        </button>\n        <button mat-flat-button color=\"primary\" class=\"me-2\" matStepperNext>\n          Successivo<span class=\"fas fa-angle-right ms-2\"></span>\n        </button>\n      </div>\n    </div>\n  </mat-step>\n\n\n  <!--STEP 3-->\n  <mat-step>\n    <ng-template matStepLabel>Situazione Attuale</ng-template>\n    <div class=\"stepper-content-wrapper\">\n      <div class=\"stepper-content\">\n       <reporter-current-situation [(currentReport)]=\"report.currReport\"></reporter-current-situation>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <button mat-flat-button color=\"primary\" class=\"me-2\" matStepperPrevious>\n          <span class=\"fas fa-angle-left me-2\"></span>Precedente\n        </button>\n        <button mat-flat-button color=\"primary\" class=\"me-2\" matStepperNext>\n          Successivo<span class=\"fas fa-angle-right ms-2\"></span>\n        </button>\n      </div>\n    </div>\n  </mat-step>\n\n  <!--STEP 4-->\n  <mat-step>\n    <ng-template matStepLabel>Situazione Prevista</ng-template>\n    <div class=\"stepper-content-wrapper\">\n      <div class=\"stepper-content\">\n        <reporter-expected-situation [(forecastReport)]=\"report.foreReport\"></reporter-expected-situation>\n      </div>\n      <div class=\"d-flex justify-content-between\">\n        <button mat-flat-button color=\"primary\" class=\"me-2\" matStepperPrevious>\n          <span class=\"fas fa-angle-left me-2\"></span>Precedente\n        </button>\n        <button mat-flat-button color=\"primary\" class=\"me-2 bg-success\" (click)=\"createReport()\">\n          Genera Report\n        </button>\n      </div>\n    </div>\n  </mat-step>\n\n</mat-stepper>\n","import { AfterViewInit, Component, Inject } from '@angular/core';\n\nimport { AppConfig, APP_CONFIG, FaviconService, PortalService } from '@cima/commons';\n\n\n@Component({\n  selector: 'reporter-app-container',\n  templateUrl: './reporter-app-container.component.html',\n  styleUrls: ['./reporter-app-container.component.scss'],\n})\nexport class ReporterAppContainerComponent  implements AfterViewInit{\n  constructor(\n    @Inject(APP_CONFIG) private config: AppConfig,\n    private faviconService: FaviconService,\n    private portalService: PortalService\n  ) {}\n\n  ngAfterViewInit() {\n    this.faviconService.setAppFavicon(this.config.name);\n    this.portalService.setTitle(this.config.description);\n  }\n}\n","<cima-app-container mode=\"side\" [sidenavOpened]=\"false\"> <!--TODO ELIMINARE SIDENAV - ORA E' NASCOSTA-->\n<!--  <ng-container app-menu>\n    <a [routerLink]=\"['/', 'reporter']\">Home</a>\n  </ng-container>-->\n\n  <ng-container app-buttons>\n    <button mat-flat-button color=\"\" class=\"bg-warning\"><span class=\"fas fa-redo-alt me-2\"></span>Reset Report</button>\n    <button mat-flat-button color=\"primary\" class=\"bg-success\"><span class=\"fas fa-paper-plane me-2\"></span>Genera Report</button>\n  </ng-container>\n\n<!--  <app-sidenav-tab icon=\"list\" i18-label label=\"Tab Label\">\n    Contenuto Sidebar\n  </app-sidenav-tab>-->\n\n</cima-app-container>\n","import { AppConfig } from '@cima/commons';\n\nexport const REPORTER_CONFIG: AppConfig = {\n  name: 'reporter',\n  description: 'Reporter',\n  version: \"0.1.11\",\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { APP_CONFIG } from '@cima/commons';\n\nimport { REPORTER_CONFIG } from './reporter.config';\n\nimport { ReporterAppContainerComponent } from './components/reporter-app-container/reporter-app-container.component';\n\nimport { HomeComponent } from './pages/home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home' },\n  {\n    path: '',\n    component: ReporterAppContainerComponent,\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [{ provide: APP_CONFIG, useValue: REPORTER_CONFIG }],\n})\nexport class ReporterRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { APP_CONFIG, CimaCommonsModule, TimebarService } from '@cima/commons';\n\nimport { ReporterRoutingModule } from \"./reporter-routing.module\";\n\nimport { ReporterAppContainerComponent } from './components/reporter-app-container/reporter-app-container.component';\n\nimport { HomeComponent } from \"./pages/home/home.component\";\n\nconst _PAGES = [HomeComponent];\n\nconst _COMPONENTS = [\n  ReporterAppContainerComponent,\n  InitializationComponent,\n  PrevSituationComponent,\n  CurrentSituationComponent,\n  ExpectedSituationComponent,\n  PrintLayoutComponent,\n  ImgUploaderComponent,\n  WarningPluvioComponent,\n  WarningIdroComponent,\n  MapComponentComponent\n];\n\nimport { REPORTER_CONFIG } from './reporter.config';\nimport {FormsModule} from \"@angular/forms\";\nimport { InitializationComponent } from './components/initialization/initialization.component';\nimport { PrevSituationComponent } from './components/prev-situation/prev-situation.component';\nimport { CurrentSituationComponent } from './components/current-situation/current-situation.component';\nimport { ExpectedSituationComponent } from './components/expected-situation/expected-situation.component';\nimport { PrintLayoutComponent } from './components/print-layout/print-layout.component';\nimport { ImgUploaderComponent } from './components/img-uploader/img-uploader.component';\nimport { WarningPluvioComponent } from './components/warning-pluvio/warning-pluvio.component';\nimport { WarningIdroComponent } from './components/warning-idro/warning-idro.component';\nimport { MapComponentComponent } from \"./components/map-component/map-component.component\";\n\n@NgModule({\n  declarations: [_PAGES, _COMPONENTS],\n    imports: [\n        CommonModule,\n        CimaCommonsModule,\n        ReporterRoutingModule,\n        FormsModule\n    ],\n  exports: [_COMPONENTS],\n  providers: [\n    TimebarService,\n    { provide: APP_CONFIG, useValue: REPORTER_CONFIG },\n  ],\n})\nexport class CimaReporterModule {}\n","/*\n * Public API Surface of reporter\n */\n\n// pages\nexport * from './lib/pages/home/home.component';\n\n// components\nexport * from './lib/components/reporter-app-container/reporter-app-container.component';\nexport * from './lib/components/initialization/initialization.component';\nexport * from './lib/components/prev-situation/prev-situation.component';\nexport * from './lib/components/current-situation/current-situation.component';\nexport * from './lib/components/expected-situation/expected-situation.component';\nexport * from './lib/components/print-layout/print-layout.component';\nexport * from  './lib/components/img-uploader/img-uploader.component';\nexport * from  './lib/components/warning-pluvio/warning-pluvio.component';\nexport * from  './lib/components/warning-idro/warning-idro.component';\nexport * from  './lib/components/map-component/map-component.component';\n\n\n// config\nexport * from './lib/reporter.config';\n\n// module.ts\nexport * from './lib/reporter.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ReporterService","i2.GeographicService","i4","i1.GeographicService","i2","i3","i4.MapComponentComponent","i6","i1","i5","i6.PrintLayoutComponent","i7","i8","i9","i10.WarningPluvioComponent","i11.WarningIdroComponent","i12.ImgUploaderComponent","i15","i16","i8.WarningPluvioComponent","i9.WarningIdroComponent","i10.ImgUploaderComponent","i11","i12","i13","i5.PrintLayoutComponent","i9.ImgUploaderComponent","i10","i4.InitializationComponent","i6.PrevSituationComponent","i7.CurrentSituationComponent","i8.ExpectedSituationComponent"],"mappings":"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"}