import { EventEmitter, OnInit } from '@angular/core';
import { SnackbarService, TextEditorComponentConfig } from "@cima/commons";
import { PrintLayout } from '../../models/classes';
import { ForecastReport } from '../../models/interfaces';
import { ReporterService } from '../../services/reporter.service';
import * as i0 from "@angular/core";
export declare class ExpectedSituationComponent implements OnInit {
    private reporterService;
    private snackBar;
    forecastReport: ForecastReport;
    forecastReportChange: EventEmitter<ForecastReport>;
    sectionEnabled: boolean;
    textExpected: string;
    config: TextEditorComponentConfig;
    dateFrom: any;
    dateTo: any;
    rainMapDatas: any[];
    snowMapDatas: any[];
    geoMapDatas: any[];
    uploadedImageLayers: any[];
    runsPrec: any[];
    runsSnow: any[];
    runsGeoPot: any[];
    constructor(reporterService: ReporterService, snackBar: SnackbarService);
    addRunPrec(): void;
    delRunPrec(item: any): void;
    addRunSnow(): void;
    delRunSnow(item: any): void;
    addRunGeoPot(): void;
    delRunGeoPot(item: any): void;
    uploadedImageChange(event: any): void;
    private updateLayers;
    dateUpdate(): void;
    layoutChange(layout: PrintLayout): void;
    selectMap(type: string, event: any, prec: any): void;
    private loadAvailability;
    private loadForecastDatasAvailability;
    enableReport(): void;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ExpectedSituationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ExpectedSituationComponent, "reporter-expected-situation", never, { "forecastReport": "forecastReport"; }, { "forecastReportChange": "forecastReportChange"; }, never, never>;
}
