import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/geographic.service";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@cima/commons";
import * as i4 from "../map-component/map-component.component";
import * as i5 from "@angular/material/input";
import * as i6 from "@angular/forms";
export class InitializationComponent {
    constructor(geoService) {
        this.geoService = geoService;
        this.reportChange = new EventEmitter();
        // public title:string='Bollettino speditivo di monitoraggio'
        // public text: string = '<span>Monitoraggio delle precipitazioni</span><br><span>Valutazione delle precipitazioni delle ultime ore</span>';
        this.config = { height: '200px', placeholder: 'Testo...' };
    }
    ngOnInit() {
        this.report.title = 'Bollettino speditivo di monitoraggio';
        this.report.txt = 'Testo...';
    }
    featuresSelected(event) {
        //aggiorna service
        this.geoService.setFeatures(event);
    }
}
InitializationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: InitializationComponent, deps: [{ token: i1.GeographicService }], target: i0.ɵɵFactoryTarget.Component });
InitializationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: InitializationComponent, selector: "reporter-initialization", inputs: { report: "report" }, outputs: { reportChange: "reportChange" }, ngImport: i0, template: "<div class=\"row\">\n\n  <!--titolo-->\n  <div class=\"col-12\">\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Titolo</mat-label>\n      <input name=\"title\" [(ngModel)]=\"report.title\" matInput placeholder=\"Bollettino speditivo di monitoraggio\" required>\n    </mat-form-field>\n  </div>\n\n  <!--testo-->\n  <div class=\"col-12\">\n    <cima-text-editor [(text)]=\"report.txt\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--mappa-->\n  <div class=\"col-12 my-2\" >\n    <!--<h2 class=\"mb-1 mt-3\">Area Geografica di analisi</h2>-->\n    <div class=\"map-container\">\n      <app-map-component (selected)=\"featuresSelected($event)\" ></app-map-component>\n      <!-- <iframe width=\"100%\" height=\"450\"  src=\"https://www.openstreetmap.org/export/embed.html?bbox=-0.3592094779014588%2C37.813520326534004%2C19.789716303348545%2C46.09556117015435&amp;layer=mapnik\" style=\"border: 0px solid black\"></iframe> -->\n    </div>\n  </div>\n\n</div>\n", styles: [""], components: [{ type: i2.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i3.TextEditorComponent, selector: "cima-text-editor", inputs: ["validator", "text", "config"], outputs: ["textChange"] }, { type: i4.MapComponentComponent, selector: "app-map-component", outputs: ["selected"] }], directives: [{ type: i2.MatLabel, selector: "mat-label" }, { type: i5.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: InitializationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'reporter-initialization', template: "<div class=\"row\">\n\n  <!--titolo-->\n  <div class=\"col-12\">\n    <mat-form-field appearance=\"fill\" class=\"w-100\">\n      <mat-label>Titolo</mat-label>\n      <input name=\"title\" [(ngModel)]=\"report.title\" matInput placeholder=\"Bollettino speditivo di monitoraggio\" required>\n    </mat-form-field>\n  </div>\n\n  <!--testo-->\n  <div class=\"col-12\">\n    <cima-text-editor [(text)]=\"report.txt\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--mappa-->\n  <div class=\"col-12 my-2\" >\n    <!--<h2 class=\"mb-1 mt-3\">Area Geografica di analisi</h2>-->\n    <div class=\"map-container\">\n      <app-map-component (selected)=\"featuresSelected($event)\" ></app-map-component>\n      <!-- <iframe width=\"100%\" height=\"450\"  src=\"https://www.openstreetmap.org/export/embed.html?bbox=-0.3592094779014588%2C37.813520326534004%2C19.789716303348545%2C46.09556117015435&amp;layer=mapnik\" style=\"border: 0px solid black\"></iframe> -->\n    </div>\n  </div>\n\n</div>\n", styles: [""] }]
        }], ctorParameters: function () { return [{ type: i1.GeographicService }]; }, propDecorators: { report: [{
                type: Input
            }], reportChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdGlhbGl6YXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2ltYS9yZXBvcnRlci9zcmMvbGliL2NvbXBvbmVudHMvaW5pdGlhbGl6YXRpb24vaW5pdGlhbGl6YXRpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2ltYS9yZXBvcnRlci9zcmMvbGliL2NvbXBvbmVudHMvaW5pdGlhbGl6YXRpb24vaW5pdGlhbGl6YXRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7QUFVL0UsTUFBTSxPQUFPLHVCQUF1QjtJQVNsQyxZQUFvQixVQUE2QjtRQUE3QixlQUFVLEdBQVYsVUFBVSxDQUFtQjtRQVB2QyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFHcEQsNkRBQTZEO1FBQzdELDRJQUE0STtRQUNySSxXQUFNLEdBQThCLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsVUFBVSxFQUFDLENBQUE7SUFFL0IsQ0FBQztJQUV0RCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUMsc0NBQXNDLENBQUM7UUFDekQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUMsVUFBVSxDQUFDO0lBQzdCLENBQUM7SUFFTSxnQkFBZ0IsQ0FBQyxLQUFVO1FBQ2hDLGtCQUFrQjtRQUNsQixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDOztxSEFuQlUsdUJBQXVCO3lHQUF2Qix1QkFBdUIsd0lDVnBDLHUrQkF5QkE7NEZEZmEsdUJBQXVCO2tCQUxuQyxTQUFTOytCQUNFLHlCQUF5Qjt3R0FLMUIsTUFBTTtzQkFBZCxLQUFLO2dCQUNJLFlBQVk7c0JBQXJCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RleHRFZGl0b3JDb21wb25lbnRDb25maWd9IGZyb20gXCJAY2ltYS9jb21tb25zXCI7XG5pbXBvcnQgeyBSZXBvcnQgfSBmcm9tICcuLi8uLi9tb2RlbHMvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBHZW9ncmFwaGljU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2dlb2dyYXBoaWMuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3JlcG9ydGVyLWluaXRpYWxpemF0aW9uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2luaXRpYWxpemF0aW9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5pdGlhbGl6YXRpb24uY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBJbml0aWFsaXphdGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIHJlcG9ydDogUmVwb3J0O1xuICBAT3V0cHV0KCkgcmVwb3J0Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxSZXBvcnQ+KCk7XG4gXG5cbiAgLy8gcHVibGljIHRpdGxlOnN0cmluZz0nQm9sbGV0dGlubyBzcGVkaXRpdm8gZGkgbW9uaXRvcmFnZ2lvJ1xuICAvLyBwdWJsaWMgdGV4dDogc3RyaW5nID0gJzxzcGFuPk1vbml0b3JhZ2dpbyBkZWxsZSBwcmVjaXBpdGF6aW9uaTwvc3Bhbj48YnI+PHNwYW4+VmFsdXRhemlvbmUgZGVsbGUgcHJlY2lwaXRhemlvbmkgZGVsbGUgdWx0aW1lIG9yZTwvc3Bhbj4nO1xuICBwdWJsaWMgY29uZmlnOiBUZXh0RWRpdG9yQ29tcG9uZW50Q29uZmlnID0ge2hlaWdodDonMjAwcHgnLCBwbGFjZWhvbGRlcjogJ1Rlc3RvLi4uJ31cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGdlb1NlcnZpY2U6IEdlb2dyYXBoaWNTZXJ2aWNlKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnJlcG9ydC50aXRsZT0nQm9sbGV0dGlubyBzcGVkaXRpdm8gZGkgbW9uaXRvcmFnZ2lvJztcbiAgICB0aGlzLnJlcG9ydC50eHQ9J1Rlc3RvLi4uJztcbiAgfVxuXG4gIHB1YmxpYyBmZWF0dXJlc1NlbGVjdGVkKGV2ZW50OiBhbnkpIHtcbiAgICAvL2FnZ2lvcm5hIHNlcnZpY2VcbiAgICB0aGlzLmdlb1NlcnZpY2Uuc2V0RmVhdHVyZXMoZXZlbnQpO1xuICB9XG5cbn1cbiIsIjxkaXYgY2xhc3M9XCJyb3dcIj5cblxuICA8IS0tdGl0b2xvLS0+XG4gIDxkaXYgY2xhc3M9XCJjb2wtMTJcIj5cbiAgICA8bWF0LWZvcm0tZmllbGQgYXBwZWFyYW5jZT1cImZpbGxcIiBjbGFzcz1cInctMTAwXCI+XG4gICAgICA8bWF0LWxhYmVsPlRpdG9sbzwvbWF0LWxhYmVsPlxuICAgICAgPGlucHV0IG5hbWU9XCJ0aXRsZVwiIFsobmdNb2RlbCldPVwicmVwb3J0LnRpdGxlXCIgbWF0SW5wdXQgcGxhY2Vob2xkZXI9XCJCb2xsZXR0aW5vIHNwZWRpdGl2byBkaSBtb25pdG9yYWdnaW9cIiByZXF1aXJlZD5cbiAgICA8L21hdC1mb3JtLWZpZWxkPlxuICA8L2Rpdj5cblxuICA8IS0tdGVzdG8tLT5cbiAgPGRpdiBjbGFzcz1cImNvbC0xMlwiPlxuICAgIDxjaW1hLXRleHQtZWRpdG9yIFsodGV4dCldPVwicmVwb3J0LnR4dFwiIFtjb25maWddPVwiY29uZmlnXCI+PC9jaW1hLXRleHQtZWRpdG9yPlxuICA8L2Rpdj5cblxuICA8IS0tbWFwcGEtLT5cbiAgPGRpdiBjbGFzcz1cImNvbC0xMiBteS0yXCIgPlxuICAgIDwhLS08aDIgY2xhc3M9XCJtYi0xIG10LTNcIj5BcmVhIEdlb2dyYWZpY2EgZGkgYW5hbGlzaTwvaDI+LS0+XG4gICAgPGRpdiBjbGFzcz1cIm1hcC1jb250YWluZXJcIj5cbiAgICAgIDxhcHAtbWFwLWNvbXBvbmVudCAoc2VsZWN0ZWQpPVwiZmVhdHVyZXNTZWxlY3RlZCgkZXZlbnQpXCIgPjwvYXBwLW1hcC1jb21wb25lbnQ+XG4gICAgICA8IS0tIDxpZnJhbWUgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiNDUwXCIgIHNyYz1cImh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2V4cG9ydC9lbWJlZC5odG1sP2Jib3g9LTAuMzU5MjA5NDc3OTAxNDU4OCUyQzM3LjgxMzUyMDMyNjUzNDAwNCUyQzE5Ljc4OTcxNjMwMzM0ODU0NSUyQzQ2LjA5NTU2MTE3MDE1NDM1JmFtcDtsYXllcj1tYXBuaWtcIiBzdHlsZT1cImJvcmRlcjogMHB4IHNvbGlkIGJsYWNrXCI+PC9pZnJhbWU+IC0tPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cblxuPC9kaXY+XG4iXX0=