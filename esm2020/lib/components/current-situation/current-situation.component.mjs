import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { finalize } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../services/reporter.service";
import * as i2 from "../../services/geographic.service";
import * as i3 from "@cima/commons";
import * as i4 from "@angular/material/slide-toggle";
import * as i5 from "@angular/material/form-field";
import * as i6 from "../print-layout/print-layout.component";
import * as i7 from "@angular/material/checkbox";
import * as i8 from "../warning-pluvio/warning-pluvio.component";
import * as i9 from "../warning-idro/warning-idro.component";
import * as i10 from "../img-uploader/img-uploader.component";
import * as i11 from "@angular/forms";
import * as i12 from "@angular/common";
import * as i13 from "@angular/material/input";
export class CurrentSituationComponent {
    constructor(reportService, geoService, snackBar) {
        this.reportService = reportService;
        this.geoService = geoService;
        this.snackBar = snackBar;
        this.currentReportChange = new EventEmitter();
        this.availableMaps = [];
        this.sectionEnabled = false;
        this.textCurrent = '<span>Situazione attuale...</span>';
        this.config = { height: '200px', placeholder: 'Situazione attuale...' };
        this.uploadedImageLayers = [];
        this.warningIdroLayers = [];
        this.warningPluvioLayers = [];
        this.view = undefined;
        this.mapDisabled = new BehaviorSubject(true);
    }
    enableReport() {
        if (this.sectionEnabled) {
            this.currentReport = {
                fromUTCSecond: 0,
                toUTCSecond: 0,
                text: '',
                title: '',
                nImgs: 1,
                raings_title: 'Pluviometri',
                hydros_title: 'Idrometri',
                layers: [] //todo
            };
            this.viewSubscription = this.geoService.onViewCange().subscribe(data => {
                this.view = data;
                this.mapDisabled.next(this.view === undefined);
            });
            this.updateLayers();
            this.dateUpdate();
        }
        else {
            this.currentReport = undefined;
            if (this.viewSubscription)
                this.viewSubscription.unsubscribe();
        }
        this.currentReportChange.emit(this.currentReport);
    }
    ngOnInit() {
        this.enableReport();
        this.reportService.getAvailableMaps().subscribe(data => this.availableMaps = data);
    }
    updateLayers() {
        this.currentReport.layers = [];
        this.availableMaps.forEach(itm => { if (itm.selected && itm.data)
            this.currentReport.layers.push(itm.data); });
        this.warningIdroLayers.forEach(itm => this.currentReport.layers.push(itm));
        this.warningPluvioLayers.forEach(itm => this.currentReport.layers.push(itm));
        this.uploadedImageLayers.forEach(itm => this.currentReport.layers.push(itm));
        console.log('layers', this.currentReport.layers);
    }
    uploadedImageChange(event) {
        console.log(event);
        this.uploadedImageLayers = event;
        this.updateLayers();
    }
    warnIdroChange(event) {
        console.log(event);
        this.warningIdroLayers = event;
        this.updateLayers();
    }
    warnPluvioChange(event) {
        this.warningPluvioLayers = event;
        this.updateLayers();
    }
    layoutChange(layout) {
        if (this.currentReport)
            this.currentReport.nImgs = layout.numberOfImages;
        console.log('report', this.currentReport);
    }
    //todo: gestire cambio ritaglio
    selectMaps(map, value) {
        map.selected = value.checked;
        if (map.selected) {
            let mapParameter = {
                layer: map.value,
                from: this.currentReport.fromUTCSecond,
                to: this.currentReport.toUTCSecond,
                description: map.description,
                cumul: 3,
                lon: this.view.lon,
                lat: this.view.lat,
                zoom: this.view.zoom
            };
            this.mapDisabled.next(true);
            this.reportService.printMap(mapParameter)
                .pipe(finalize(() => this.mapDisabled.next(false)))
                .subscribe(data => {
                map.data = data;
                this.updateLayers();
            }, error => {
                console.log(error);
                this.snackBar.error('Errore durante il caricamento della mappa ' + map.description, '', { duration: 2000 });
                map.selected = false;
            });
        }
    }
    dateUpdate() {
        if (this.dateFrom)
            this.currentReport.fromUTCSecond = Math.trunc(new Date(this.dateFrom).getTime() / 1000);
        if (this.dateTo)
            this.currentReport.toUTCSecond = Math.trunc(new Date(this.dateTo).getTime() / 1000);
    }
}
CurrentSituationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CurrentSituationComponent, deps: [{ token: i1.ReporterService }, { token: i2.GeographicService }, { token: i3.SnackbarService }], target: i0.ɵɵFactoryTarget.Component });
CurrentSituationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: CurrentSituationComponent, selector: "reporter-current-situation", inputs: { currentReport: "currentReport" }, outputs: { currentReportChange: "currentReportChange" }, ngImport: i0, template: "<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\" (change)=\"enableReport()\">\n  Includi Situazione Attuale\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\">\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\" *ngIf=\"sectionEnabled\">\n    <cima-text-editor [(text)]=\"currentReport.text\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout (selected)=\"layoutChange($event)\"></reporter-print-layout>\n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Data</h3>\n          <div *ngFor=\"let map of availableMaps\" >\n            <mat-checkbox class=\"example-margin\"  [checked]=\"map.selected\" [disabled]=\"mapDisabled | async\" (change)=\"selectMaps(map,$event)\">{{map.description}}</mat-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-pluvio  [disabled]=\"!sectionEnabled\" [report]=\"currentReport\" (warningChange)=\"warnPluvioChange($event)\"></reporter-warning-pluvio>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-idro  [disabled]=\"!sectionEnabled\" [report]=\"currentReport\" (warningChange)=\"warnIdroChange($event)\"></reporter-warning-idro>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n", styles: [".section-disabled{opacity:.3;pointer-events:none}.col-wrapper{background-color:#f5f5f5;border-radius:4px}:host ::ng-deep .col-wrapper .mat-form-field-infix{width:auto!important}\n"], components: [{ type: i4.MatSlideToggle, selector: "mat-slide-toggle", inputs: ["disabled", "disableRipple", "color", "tabIndex", "name", "id", "labelPosition", "aria-label", "aria-labelledby", "aria-describedby", "required", "checked"], outputs: ["change", "toggleChange"], exportAs: ["matSlideToggle"] }, { type: i5.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i3.TextEditorComponent, selector: "cima-text-editor", inputs: ["validator", "text", "config"], outputs: ["textChange"] }, { type: i6.PrintLayoutComponent, selector: "reporter-print-layout", outputs: ["selected"] }, { type: i7.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex", "aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { type: i8.WarningPluvioComponent, selector: "reporter-warning-pluvio", inputs: ["disabled", "report"], outputs: ["warningChange"] }, { type: i9.WarningIdroComponent, selector: "reporter-warning-idro", inputs: ["disabled", "report"], outputs: ["warningChange"] }, { type: i10.ImgUploaderComponent, selector: "reporter-img-uploader", outputs: ["uploadedChange"] }], directives: [{ type: i11.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i11.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i12.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.MatLabel, selector: "mat-label" }, { type: i13.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i11.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i12.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i12.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i12.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: CurrentSituationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'reporter-current-situation', template: "<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\" (change)=\"enableReport()\">\n  Includi Situazione Attuale\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\">\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\" *ngIf=\"sectionEnabled\">\n    <cima-text-editor [(text)]=\"currentReport.text\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout (selected)=\"layoutChange($event)\"></reporter-print-layout>\n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Data</h3>\n          <div *ngFor=\"let map of availableMaps\" >\n            <mat-checkbox class=\"example-margin\"  [checked]=\"map.selected\" [disabled]=\"mapDisabled | async\" (change)=\"selectMaps(map,$event)\">{{map.description}}</mat-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-pluvio  [disabled]=\"!sectionEnabled\" [report]=\"currentReport\" (warningChange)=\"warnPluvioChange($event)\"></reporter-warning-pluvio>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-idro  [disabled]=\"!sectionEnabled\" [report]=\"currentReport\" (warningChange)=\"warnIdroChange($event)\"></reporter-warning-idro>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</div>\n", styles: [".section-disabled{opacity:.3;pointer-events:none}.col-wrapper{background-color:#f5f5f5;border-radius:4px}:host ::ng-deep .col-wrapper .mat-form-field-infix{width:auto!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ReporterService }, { type: i2.GeographicService }, { type: i3.SnackbarService }]; }, propDecorators: { currentReport: [{
                type: Input
            }], currentReportChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,