import { Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/fake-data.service";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@angular/material/select";
import * as i4 from "@angular/material/core";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/common";
export class WarningIdroComponent {
    constructor(fakeData) {
        this.fakeData = fakeData;
        /*WARNINGIDRO*/
        this.warningsIdro = [
            {
                id: 0,
                aggregazione: ''
            }
        ];
    }
    ngOnInit() {
    }
    addWarningIdro() {
        this.warningsIdro = [...this.warningsIdro, { id: 1, aggregazione: '' }];
    }
    delWarningIdro(item) {
        this.warningsIdro = this.warningsIdro.filter((x) => x != item);
    }
}
WarningIdroComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: WarningIdroComponent, deps: [{ token: i1.FakeDataService }], target: i0.ɵɵFactoryTarget.Component });
WarningIdroComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.0", type: WarningIdroComponent, selector: "reporter-warning-idro", ngImport: i0, template: "<h3>Warnings Idrometrici</h3>\n\n<div class=\"warningIdro\" *ngFor=\"let warning of warningsIdro, let i = index\">\n\n  <div class=\"item-list-big-bull bg-info\">\n    <span>{{i+1}}</span>\n  </div>\n\n  <mat-form-field appearance=\"fill\" class=\"w-100\">\n    <mat-label>Aggregazione</mat-label>\n    <mat-select>\n      <mat-option *ngFor=\"let aggregazione of fakeData.aggWarning\" [value]=\"aggregazione.value\">\n        {{aggregazione.value}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <div class=\"del-btn-wrapper ms-2\">\n    <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delWarningIdro(warning)\"></span>\n  </div>\n\n</div>\n\n<button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addWarningIdro()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Warning Idro</button>\n", styles: [".warningIdro{display:flex}.item-list-big-bull{min-width:25px;min-height:25px;max-width:25px;max-height:25px;border-radius:50%;background-color:#0266cc;color:#fff;display:flex;justify-content:center;align-items:center;font-size:1.2em;font-weight:600;margin-right:8px;margin-top:14px}.del-btn-wrapper{padding-top:16px;width:25px}.del-btn-wrapper .del-btn{cursor:pointer;color:gray}.del-btn-wrapper .del-btn:hover{color:#2f4f4f}\n"], components: [{ type: i2.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i3.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { type: i4.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { type: i5.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }], directives: [{ type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.MatLabel, selector: "mat-label" }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.0", ngImport: i0, type: WarningIdroComponent, decorators: [{
            type: Component,
            args: [{ selector: 'reporter-warning-idro', template: "<h3>Warnings Idrometrici</h3>\n\n<div class=\"warningIdro\" *ngFor=\"let warning of warningsIdro, let i = index\">\n\n  <div class=\"item-list-big-bull bg-info\">\n    <span>{{i+1}}</span>\n  </div>\n\n  <mat-form-field appearance=\"fill\" class=\"w-100\">\n    <mat-label>Aggregazione</mat-label>\n    <mat-select>\n      <mat-option *ngFor=\"let aggregazione of fakeData.aggWarning\" [value]=\"aggregazione.value\">\n        {{aggregazione.value}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <div class=\"del-btn-wrapper ms-2\">\n    <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delWarningIdro(warning)\"></span>\n  </div>\n\n</div>\n\n<button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addWarningIdro()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Warning Idro</button>\n", styles: [".warningIdro{display:flex}.item-list-big-bull{min-width:25px;min-height:25px;max-width:25px;max-height:25px;border-radius:50%;background-color:#0266cc;color:#fff;display:flex;justify-content:center;align-items:center;font-size:1.2em;font-weight:600;margin-right:8px;margin-top:14px}.del-btn-wrapper{padding-top:16px;width:25px}.del-btn-wrapper .del-btn{cursor:pointer;color:gray}.del-btn-wrapper .del-btn:hover{color:#2f4f4f}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.FakeDataService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FybmluZy1pZHJvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NpbWEvcmVwb3J0ZXIvc3JjL2xpYi9jb21wb25lbnRzL3dhcm5pbmctaWRyby93YXJuaW5nLWlkcm8uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2ltYS9yZXBvcnRlci9zcmMvbGliL2NvbXBvbmVudHMvd2FybmluZy1pZHJvL3dhcm5pbmctaWRyby5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDOzs7Ozs7OztBQVFsRCxNQUFNLE9BQU8sb0JBQW9CO0lBRS9CLFlBQW1CLFFBQXlCO1FBQXpCLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBTTVDLGVBQWU7UUFDUixpQkFBWSxHQUFRO1lBQ3pCO2dCQUNFLEVBQUUsRUFBQyxDQUFDO2dCQUNKLFlBQVksRUFBQyxFQUFFO2FBQ2hCO1NBQ0YsQ0FBQTtJQVorQyxDQUFDO0lBRWpELFFBQVE7SUFDUixDQUFDO0lBVUQsY0FBYztRQUNaLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFBQyxFQUFFLEVBQUMsQ0FBQyxFQUFFLFlBQVksRUFBQyxFQUFFLEVBQUMsQ0FBQyxDQUFBO0lBQ3JFLENBQUM7SUFDRCxjQUFjLENBQUMsSUFBUTtRQUNyQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUE7SUFDckUsQ0FBQzs7aUhBcEJVLG9CQUFvQjtxR0FBcEIsb0JBQW9CLDZEQ1JqQyw4MEJBd0JBOzJGRGhCYSxvQkFBb0I7a0JBTGhDLFNBQVM7K0JBQ0UsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RmFrZURhdGFTZXJ2aWNlfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvZmFrZS1kYXRhLnNlcnZpY2VcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncmVwb3J0ZXItd2FybmluZy1pZHJvJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3dhcm5pbmctaWRyby5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3dhcm5pbmctaWRyby5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFdhcm5pbmdJZHJvQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgZmFrZURhdGE6IEZha2VEYXRhU2VydmljZSkgeyB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gIH1cblxuXG4gIC8qV0FSTklOR0lEUk8qL1xuICBwdWJsaWMgd2FybmluZ3NJZHJvOiBhbnkgPSBbXG4gICAge1xuICAgICAgaWQ6MCxcbiAgICAgIGFnZ3JlZ2F6aW9uZTonJ1xuICAgIH1cbiAgXVxuICBhZGRXYXJuaW5nSWRybygpe1xuICAgIHRoaXMud2FybmluZ3NJZHJvID0gWy4uLnRoaXMud2FybmluZ3NJZHJvLCB7aWQ6MSwgYWdncmVnYXppb25lOicnfV1cbiAgfVxuICBkZWxXYXJuaW5nSWRybyhpdGVtOmFueSkge1xuICAgIHRoaXMud2FybmluZ3NJZHJvID0gdGhpcy53YXJuaW5nc0lkcm8uZmlsdGVyKCh4OiBhbnkpID0+IHggIT0gaXRlbSlcbiAgfVxuXG59XG4iLCI8aDM+V2FybmluZ3MgSWRyb21ldHJpY2k8L2gzPlxuXG48ZGl2IGNsYXNzPVwid2FybmluZ0lkcm9cIiAqbmdGb3I9XCJsZXQgd2FybmluZyBvZiB3YXJuaW5nc0lkcm8sIGxldCBpID0gaW5kZXhcIj5cblxuICA8ZGl2IGNsYXNzPVwiaXRlbS1saXN0LWJpZy1idWxsIGJnLWluZm9cIj5cbiAgICA8c3Bhbj57e2krMX19PC9zcGFuPlxuICA8L2Rpdj5cblxuICA8bWF0LWZvcm0tZmllbGQgYXBwZWFyYW5jZT1cImZpbGxcIiBjbGFzcz1cInctMTAwXCI+XG4gICAgPG1hdC1sYWJlbD5BZ2dyZWdhemlvbmU8L21hdC1sYWJlbD5cbiAgICA8bWF0LXNlbGVjdD5cbiAgICAgIDxtYXQtb3B0aW9uICpuZ0Zvcj1cImxldCBhZ2dyZWdhemlvbmUgb2YgZmFrZURhdGEuYWdnV2FybmluZ1wiIFt2YWx1ZV09XCJhZ2dyZWdhemlvbmUudmFsdWVcIj5cbiAgICAgICAge3thZ2dyZWdhemlvbmUudmFsdWV9fVxuICAgICAgPC9tYXQtb3B0aW9uPlxuICAgIDwvbWF0LXNlbGVjdD5cbiAgPC9tYXQtZm9ybS1maWVsZD5cblxuICA8ZGl2IGNsYXNzPVwiZGVsLWJ0bi13cmFwcGVyIG1zLTJcIj5cbiAgICA8c3BhbiBjbGFzcz1cImRlbC1idG4gZmFzIGZhLXRyYXNoLWFsdFwiICpuZ0lmPVwiaT4wXCIgKGNsaWNrKT1cImRlbFdhcm5pbmdJZHJvKHdhcm5pbmcpXCI+PC9zcGFuPlxuICA8L2Rpdj5cblxuPC9kaXY+XG5cbjxidXR0b24gbWF0LWZsYXQtYnV0dG9uIGNvbG9yPVwicHJpbWFyeVwiIGNsYXNzPVwiYmctc3VjY2Vzc1wiIChjbGljayk9XCJhZGRXYXJuaW5nSWRybygpXCI+PHNwYW4gY2xhc3M9XCJmYXMgZmEtcGx1cyBtZS0xXCI+PC9zcGFuPkFnZ2l1bmdpIFdhcm5pbmcgSWRybzwvYnV0dG9uPlxuIl19