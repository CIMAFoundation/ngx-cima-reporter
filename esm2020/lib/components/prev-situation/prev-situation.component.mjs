import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { finalize } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../services/reporter.service";
import * as i2 from "../../services/geographic.service";
import * as i3 from "@cima/commons";
import * as i4 from "@angular/material/slide-toggle";
import * as i5 from "@angular/material/form-field";
import * as i6 from "../print-layout/print-layout.component";
import * as i7 from "@angular/material/select";
import * as i8 from "@angular/material/core";
import * as i9 from "@angular/material/button";
import * as i10 from "../warning-pluvio/warning-pluvio.component";
import * as i11 from "../warning-idro/warning-idro.component";
import * as i12 from "../img-uploader/img-uploader.component";
import * as i13 from "@angular/material/checkbox";
import * as i14 from "@angular/forms";
import * as i15 from "@angular/common";
import * as i16 from "@angular/material/input";
export class PrevSituationComponent {
    constructor(reporterService, geoService, snackBar) {
        this.reporterService = reporterService;
        this.geoService = geoService;
        this.snackBar = snackBar;
        this.previousReportChange = new EventEmitter();
        this.sectionEnabled = false;
        this.pluviometriTableEnabled = false;
        this.idrometriTableEnabled = false;
        this.textPrev = '<span>Situtazione pregressa...</span>';
        this.config = { height: '200px', placeholder: 'Situazione pregressa...' };
        this.uploadedImageLayers = [];
        this.warningIdroLayers = [];
        this.warningPluvioLayers = [];
        this.pluvioCum = 1;
        this.selectedFeatures = '';
        this.view = undefined;
        /*RAINMAPS*/
        this.rainMaps = [{
                id: 0,
                timerange: ''
            }];
        this.mapDisabled = new BehaviorSubject(true);
        this.featureSubscription = undefined;
        this.viewSubscription = undefined;
    }
    resetRainMaps() {
        this.rainMaps = [{ id: 0, timerange: '' }];
        this.updateLayers();
    }
    addRainMaps() {
        this.rainMaps = [...this.rainMaps, { id: 0, timeRange: '' }];
    }
    delRainMaps(item) {
        this.rainMaps = this.rainMaps.filter((x) => x != item);
    }
    updateLayers() {
        this.previousReport.layers = [];
        this.rainMaps.forEach(itm => { if (itm.data)
            this.previousReport.layers.push(itm.data); });
        this.warningIdroLayers.forEach(itm => this.previousReport.layers.push(itm));
        this.warningPluvioLayers.forEach(itm => this.previousReport.layers.push(itm));
        this.uploadedImageLayers.forEach(itm => this.previousReport.layers.push(itm));
    }
    uploadedImageChange(event) {
        this.uploadedImageLayers = event;
        this.updateLayers();
    }
    warnIdroChange(event) {
        this.warningIdroLayers = event;
        this.updateLayers();
    }
    warnPluvioChange(event) {
        this.warningPluvioLayers = event;
        this.updateLayers();
    }
    selectMap(cumValue, map) {
        let mapParameter = {
            layer: 'RAINMAP_ITALY',
            from: this.previousReport.fromUTCSecond,
            to: this.previousReport.toUTCSecond,
            description: '',
            cumul: cumValue,
            lon_min: this.view.bbox.getWest(), lon_max: this.view.bbox.getEast(),
            lat_min: this.view.bbox.getSouth(), lat_max: this.view.bbox.getNorth()
        };
        this.mapDisabled.next(true);
        this.reporterService.printMap(mapParameter)
            .pipe(finalize(() => this.mapDisabled.next(false)))
            .subscribe(data => {
            map.data = data;
            this.updateLayers();
        }, error => {
            console.error(error);
            this.snackBar.error('Si è verificato un errore duranta la generazione della mappa.', '', { duration: 2000 });
        });
    }
    selectPluvioCum(value) {
        this.previousReport.raings_cumul = value + (value > 1 ? ' Ore' : 'Ora');
        this.loadStations();
    }
    dateUpdate() {
        if (this.dateFrom)
            this.previousReport.fromUTCSecond = Math.trunc(new Date(this.dateFrom).getTime() / 1000);
        if (this.dateTo)
            this.previousReport.toUTCSecond = Math.trunc(new Date(this.dateTo).getTime() / 1000);
        this.loadStations();
    }
    layoutChange(layout) {
        if (this.previousReport)
            this.previousReport.nImgs = layout.numberOfImages;
    }
    toggleStationAll(stationlist, listitem, event) {
        console.log('toggleall');
        console.log(stationlist);
        console.log(listitem);
        console.log(event.checked);
        stationlist.splice(0, stationlist.length);
        listitem.forEach(itm => {
            itm.selected = event.checked;
        });
        stationlist.push(...listitem.filter(itm => itm.selected));
    }
    toggleStation(stationlist, listitem, item, event) {
        item.selected = event.checked;
        stationlist.splice(0, stationlist.length);
        stationlist.push(...listitem.filter(itm => itm.selected));
    }
    loadStations() {
        this.pluvioStations = [];
        this.hydroStations = [];
        if (this.selectedFeatures.length > 0 || (this.view && this.view.bbox)) {
            this.reporterService.getPluvio(this.selectedFeatures, this.previousReport.toUTCSecond, this.pluvioCum, this.view.bbox).subscribe(data => {
                console.log('stations', data);
                this.pluvioStations = data;
            }, error => {
                console.error(error);
                this.snackBar.error('Errore durante la lettura dei pluviometri', '', { duration: 2000 });
            });
            this.reporterService.getHydro(this.selectedFeatures, this.previousReport.toUTCSecond, this.view.bbox).subscribe(data => {
                this.hydroStations = data;
                console.log('stations hydro ', data);
            }, error => {
                console.error(error);
                this.snackBar.error('Errore durante la lettura degli idrometri', '', { duration: 2000 });
            });
        }
    }
    enableReport() {
        if (this.sectionEnabled) {
            this.previousReport = {
                fromUTCSecond: 0,
                toUTCSecond: 0,
                text: '',
                title: '',
                nImgs: 1,
                raings_title: 'Pluviometri',
                hydros_title: 'Idrometri',
                layers: [],
                raings: [],
                hydros: [],
                raings_cumul: '1 Ora'
            };
            this.updateLayers();
            this.dateUpdate();
            this.featureSubscription = this.geoService.onFeaturesChange().subscribe(data => {
                this.selectedFeatures = data.join(',');
                this.loadStations();
            });
            this.viewSubscription = this.geoService.onViewCange().subscribe(data => {
                this.view = data;
                this.resetRainMaps();
                this.mapDisabled.next(this.view === undefined);
                this.loadStations();
            });
        }
        else {
            if (this.viewSubscription)
                this.viewSubscription.unsubscribe();
            if (this.featureSubscription)
                this.featureSubscription.unsubscribe();
            this.previousReport = undefined;
        }
        this.previousReportChange.emit(this.previousReport);
    }
    ngOnInit() {
        this.enableReport();
        this.reporterService.getAvailableCumul().subscribe(data => {
            this.cumuls = data;
        });
        this.loadStations();
    }
}
PrevSituationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: PrevSituationComponent, deps: [{ token: i1.ReporterService }, { token: i2.GeographicService }, { token: i3.SnackbarService }], target: i0.ɵɵFactoryTarget.Component });
PrevSituationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.11", type: PrevSituationComponent, selector: "reporter-prev-situation", inputs: { previousReport: "previousReport" }, outputs: { previousReportChange: "previousReportChange" }, ngImport: i0, template: "<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\"  (change)=\"enableReport()\">\n  Includi Situazione Pregressa\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\" >\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n        <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\" *ngIf=\"sectionEnabled\">\n    <cima-text-editor [(text)]=\"previousReport.text\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout (selected)=\"layoutChange($event)\"></reporter-print-layout>\n \n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Mappe di Pioggia</h3>\n\n          <div class=\"rainMap\" *ngFor=\"let map of rainMaps, let i = index\">\n\n            <div class=\"item-list-big-bull\">\n              <span>{{i+1}}</span>\n            </div>\n\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\n              <mat-label>Cumulata</mat-label>\n              <mat-select [(value)]=\"map.selection\" (valueChange)=\"selectMap($event, map)\" [disabled]=\"mapDisabled | async\">\n                <mat-option *ngFor=\"let cumulata of cumuls\" [value]=\"cumulata.value\">\n                  {{cumulata.descr}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"del-btn-wrapper ms-2\">\n              <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delRainMaps(map)\"></span>\n            </div>\n\n          </div>\n\n          <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addRainMaps()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Mappa</button>\n\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-pluvio  [disabled]=\"!sectionEnabled\" [report]=\"previousReport\" (warningChange)=\"warnPluvioChange($event)\" ></reporter-warning-pluvio>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-idro   [disabled]=\"!sectionEnabled\" [report]=\"previousReport\" (warningChange)=\"warnIdroChange($event)\"></reporter-warning-idro>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--tabella pluvio -->\n  <div class=\"col-12 my-2\">\n\n    <!--pluviometri-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Pluviometri</h2>\n\n    <div class=\"row\">\n\n      <div class=\"col-12 d-flex justify-content-between align-items-center\">\n        <!--abilitazione-->\n        <mat-slide-toggle\n          class=\"me-2\"\n          color=primary [(ngModel)]=\"pluviometriTableEnabled\">\n          Includi Pluviometri\n        </mat-slide-toggle>\n\n        <mat-form-field appearance=\"fill\" class=\"\">\n          <mat-label>Cumulata</mat-label>\n          <mat-select [(value)]=\"pluvioCum\" (valueChange)=\"selectPluvioCum($event)\">\n            <mat-option *ngFor=\"let cumulata of cumuls\" [value]=\"cumulata.value\">\n              {{cumulata.descr}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <!--tabella pluviometri-->\n      <div class=\"col-12 pluviometri-table\" [ngClass]=\"!pluviometriTableEnabled?'section-disabled':''\">\n\n        <table class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th scope=\"col\">\n              <mat-checkbox class=\"example-margin\" (change)=\"toggleStationAll(previousReport.raings,pluvioStations, $event)\"></mat-checkbox>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Stazione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca stazione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Comune</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca comune\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Provincia</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca provincia\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Regione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca regione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Valore</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca valore\">\n              </span>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let pluvio of pluvioStations\">\n              <td scope=\"row\">\n                <mat-checkbox class=\"example-margin\"  [checked]=\"pluvio.selected\" (change)=\"toggleStation(previousReport.raings,pluvioStations,pluvio,$event)\"></mat-checkbox>\n              </td>\n              <td>{{pluvio.stationname}}</td>\n              <td>{{pluvio.munic}}</td>\n              <td>{{pluvio.district}}</td>\n              <td>{{pluvio.region}}</td>\n              <td>{{pluvio.value}} {{pluvio.mu}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n    </div>\n\n  </div>\n\n  <!--tabella idro -->\n  <div class=\"col-12 my-2\">\n\n    <!--pluviometri-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Idrometri</h2>\n\n    <div class=\"row\">\n\n      <div class=\"col-12 d-flex justify-content-between align-items-center\">\n        <!--abilitazione-->\n        <mat-slide-toggle\n          class=\"me-2\"\n          color=primary [(ngModel)]=\"idrometriTableEnabled\">\n          Includi Idrometri \n        </mat-slide-toggle>\n\n      </div>\n\n      <!--tabella idrometri-->\n      <div class=\"col-12 pluviometri-table\" [ngClass]=\"!idrometriTableEnabled?'section-disabled':''\">\n\n        <table class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th scope=\"col\">\n              <mat-checkbox class=\"example-margin\" (change)=\"toggleStationAll(previousReport.hydros,hydroStations,$event)\"></mat-checkbox>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Stazione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca stazione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Comune</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca comune\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Provincia</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca provincia\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Regione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca regione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Valore</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca valore\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Superamento Soglia</span>\n              <select class=\"table-filter\" type=\"text\">\n                <option value=\"1\">Nussuna selezione</option>\n                <option value=\"1\">Bassa</option>\n                <option value=\"1\">Media</option>\n                <option value=\"1\">Elevata</option>\n                <option value=\"1\">Molto Elevata</option>\n                <option value=\"1\">Massima</option>\n              </select>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let hydro of hydroStations\">\n            <th scope=\"row\">\n              <mat-checkbox class=\"example-margin\"  [checked]=\"hydro.selected\" (change)=\"toggleStation(previousReport.hydros,hydroStations,hydro,$event)\"></mat-checkbox>\n            </th>\n            <td>{{hydro.stationname}}</td>\n            <td>{{hydro.munic}}</td>\n            <td>{{hydro.district}}</td>\n            <td>{{hydro.region}}</td>\n            <td>{{hydro.value}} {{hydro.mu}}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n    </div>\n\n  </div>\n</div>\n\n\n\n\n", styles: [".section-disabled{opacity:.3;pointer-events:none}.col-wrapper{background-color:#f5f5f5;border-radius:4px}.rainMap{display:flex}.item-list-big-bull{min-width:25px;min-height:25px;max-width:25px;max-height:25px;border-radius:50%;background-color:#0266cc;color:#fff;display:flex;justify-content:center;align-items:center;font-size:1.2em;font-weight:600;margin-right:8px;margin-top:14px}.del-btn-wrapper{padding-top:16px;width:25px}.del-btn-wrapper .del-btn{cursor:pointer;color:gray}.del-btn-wrapper .del-btn:hover{color:#2f4f4f}.table-input-wrapper{position:relative}.table-input-wrapper:after{position:absolute;right:5px;top:50%;transform:translateY(-50%);content:\"\\f002\";font-family:\"Font Awesome 5 Free\";font-weight:900;color:gray}.table-filter{border-radius:4px;border:solid 1px lightgray;padding-right:20px;width:100px}:host ::ng-deep .col-wrapper .mat-form-field-infix{width:auto!important}table tbody{display:block;height:200px;overflow:auto}table thead,tbody tr{display:table;width:100%;table-layout:fixed}table thead{width:calc(100% - 1em)}\n"], components: [{ type: i4.MatSlideToggle, selector: "mat-slide-toggle", inputs: ["disabled", "disableRipple", "color", "tabIndex", "name", "id", "labelPosition", "aria-label", "aria-labelledby", "aria-describedby", "required", "checked"], outputs: ["change", "toggleChange"], exportAs: ["matSlideToggle"] }, { type: i5.MatFormField, selector: "mat-form-field", inputs: ["color", "appearance", "hideRequiredMarker", "hintLabel", "floatLabel"], exportAs: ["matFormField"] }, { type: i3.TextEditorComponent, selector: "cima-text-editor", inputs: ["validator", "text", "config"], outputs: ["textChange"] }, { type: i6.PrintLayoutComponent, selector: "reporter-print-layout", outputs: ["selected"] }, { type: i7.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { type: i8.MatOption, selector: "mat-option", exportAs: ["matOption"] }, { type: i9.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { type: i10.WarningPluvioComponent, selector: "reporter-warning-pluvio", inputs: ["disabled", "report"], outputs: ["warningChange"] }, { type: i11.WarningIdroComponent, selector: "reporter-warning-idro", inputs: ["disabled", "report"], outputs: ["warningChange"] }, { type: i12.ImgUploaderComponent, selector: "reporter-img-uploader", outputs: ["uploadedChange"] }, { type: i13.MatCheckbox, selector: "mat-checkbox", inputs: ["disableRipple", "color", "tabIndex", "aria-label", "aria-labelledby", "aria-describedby", "id", "required", "labelPosition", "name", "value", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }], directives: [{ type: i14.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i14.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i15.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.MatLabel, selector: "mat-label" }, { type: i16.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { type: i14.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i15.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i15.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i14.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i14.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }], pipes: { "async": i15.AsyncPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.11", ngImport: i0, type: PrevSituationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'reporter-prev-situation', template: "<!--abilitazione-->\n<mat-slide-toggle\n  class=\"\"\n  color=primary [(ngModel)]=\"sectionEnabled\"  (change)=\"enableReport()\">\n  Includi Situazione Pregressa\n</mat-slide-toggle>\n\n\n<div class=\"section-wrapper\" [ngClass]=\"!sectionEnabled?'section-disabled':''\">\n  <!--mappa-->\n  <div class=\"col-12 my-2\" >\n    <!--periodo di analisi-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Periodo di Analisi</h2>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>da</mat-label>\n        <input matInput type=\"datetime-local\" placeholder=\"data da\" [(ngModel)]= \"dateFrom\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" class=\"me-2\">\n      <mat-label>a</mat-label>\n      <input matInput type=\"datetime-local\" placeholder=\"data a\" [(ngModel)]= \"dateTo\" (change)=\"dateUpdate()\">\n    </mat-form-field>\n\n    <!-- <button mat-flat-button color=\"primary\"><span class=\"fas fa-clock me-1\"></span>Now</button> -->\n\n  </div>\n\n  <!--testo situazione pregressa-->\n  <div class=\"col-12 my-2\" *ngIf=\"sectionEnabled\">\n    <cima-text-editor [(text)]=\"previousReport.text\" [config]=\"config\"></cima-text-editor>\n  </div>\n\n  <!--layout stampa-->\n  <div class=\"col-12 my-2\">\n    <reporter-print-layout (selected)=\"layoutChange($event)\"></reporter-print-layout>\n \n  </div>\n\n  <!--layer-->\n  <div class=\"col-12 my-2\">\n    <h2 class=\"border-bottom mb-3 mt-3\">Layers</h2>\n    <div class=\"row\">\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <h3>Mappe di Pioggia</h3>\n\n          <div class=\"rainMap\" *ngFor=\"let map of rainMaps, let i = index\">\n\n            <div class=\"item-list-big-bull\">\n              <span>{{i+1}}</span>\n            </div>\n\n            <mat-form-field appearance=\"fill\" class=\"w-100\">\n              <mat-label>Cumulata</mat-label>\n              <mat-select [(value)]=\"map.selection\" (valueChange)=\"selectMap($event, map)\" [disabled]=\"mapDisabled | async\">\n                <mat-option *ngFor=\"let cumulata of cumuls\" [value]=\"cumulata.value\">\n                  {{cumulata.descr}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"del-btn-wrapper ms-2\">\n              <span class=\"del-btn fas fa-trash-alt\" *ngIf=\"i>0\" (click)=\"delRainMaps(map)\"></span>\n            </div>\n\n          </div>\n\n          <button mat-flat-button color=\"primary\" class=\"bg-success\" (click)=\"addRainMaps()\"><span class=\"fas fa-plus me-1\"></span>Aggiungi Mappa</button>\n\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-pluvio  [disabled]=\"!sectionEnabled\" [report]=\"previousReport\" (warningChange)=\"warnPluvioChange($event)\" ></reporter-warning-pluvio>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-warning-idro   [disabled]=\"!sectionEnabled\" [report]=\"previousReport\" (warningChange)=\"warnIdroChange($event)\"></reporter-warning-idro>\n        </div>\n      </div>\n\n      <div class=\"col-12 col-lg-6 col-xl-3 mb-2\">\n        <div class=\"col-wrapper p-3\">\n          <reporter-img-uploader (uploadedChange)=\"uploadedImageChange($event)\"></reporter-img-uploader>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--tabella pluvio -->\n  <div class=\"col-12 my-2\">\n\n    <!--pluviometri-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Pluviometri</h2>\n\n    <div class=\"row\">\n\n      <div class=\"col-12 d-flex justify-content-between align-items-center\">\n        <!--abilitazione-->\n        <mat-slide-toggle\n          class=\"me-2\"\n          color=primary [(ngModel)]=\"pluviometriTableEnabled\">\n          Includi Pluviometri\n        </mat-slide-toggle>\n\n        <mat-form-field appearance=\"fill\" class=\"\">\n          <mat-label>Cumulata</mat-label>\n          <mat-select [(value)]=\"pluvioCum\" (valueChange)=\"selectPluvioCum($event)\">\n            <mat-option *ngFor=\"let cumulata of cumuls\" [value]=\"cumulata.value\">\n              {{cumulata.descr}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <!--tabella pluviometri-->\n      <div class=\"col-12 pluviometri-table\" [ngClass]=\"!pluviometriTableEnabled?'section-disabled':''\">\n\n        <table class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th scope=\"col\">\n              <mat-checkbox class=\"example-margin\" (change)=\"toggleStationAll(previousReport.raings,pluvioStations, $event)\"></mat-checkbox>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Stazione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca stazione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Comune</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca comune\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Provincia</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca provincia\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Regione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca regione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Valore</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca valore\">\n              </span>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let pluvio of pluvioStations\">\n              <td scope=\"row\">\n                <mat-checkbox class=\"example-margin\"  [checked]=\"pluvio.selected\" (change)=\"toggleStation(previousReport.raings,pluvioStations,pluvio,$event)\"></mat-checkbox>\n              </td>\n              <td>{{pluvio.stationname}}</td>\n              <td>{{pluvio.munic}}</td>\n              <td>{{pluvio.district}}</td>\n              <td>{{pluvio.region}}</td>\n              <td>{{pluvio.value}} {{pluvio.mu}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n    </div>\n\n  </div>\n\n  <!--tabella idro -->\n  <div class=\"col-12 my-2\">\n\n    <!--pluviometri-->\n    <h2 class=\"border-bottom mb-3 mt-3\">Idrometri</h2>\n\n    <div class=\"row\">\n\n      <div class=\"col-12 d-flex justify-content-between align-items-center\">\n        <!--abilitazione-->\n        <mat-slide-toggle\n          class=\"me-2\"\n          color=primary [(ngModel)]=\"idrometriTableEnabled\">\n          Includi Idrometri \n        </mat-slide-toggle>\n\n      </div>\n\n      <!--tabella idrometri-->\n      <div class=\"col-12 pluviometri-table\" [ngClass]=\"!idrometriTableEnabled?'section-disabled':''\">\n\n        <table class=\"table table-striped\">\n          <thead>\n          <tr>\n            <th scope=\"col\">\n              <mat-checkbox class=\"example-margin\" (change)=\"toggleStationAll(previousReport.hydros,hydroStations,$event)\"></mat-checkbox>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Stazione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca stazione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Comune</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca comune\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Provincia</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca provincia\">\n              </span></th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Regione</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca regione\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Valore</span>\n              <span class=\"table-input-wrapper\">\n                <input class=\"table-filter\" type=\"text\" placeholder=\"Cerca valore\">\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"me-1\">Superamento Soglia</span>\n              <select class=\"table-filter\" type=\"text\">\n                <option value=\"1\">Nussuna selezione</option>\n                <option value=\"1\">Bassa</option>\n                <option value=\"1\">Media</option>\n                <option value=\"1\">Elevata</option>\n                <option value=\"1\">Molto Elevata</option>\n                <option value=\"1\">Massima</option>\n              </select>\n            </th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let hydro of hydroStations\">\n            <th scope=\"row\">\n              <mat-checkbox class=\"example-margin\"  [checked]=\"hydro.selected\" (change)=\"toggleStation(previousReport.hydros,hydroStations,hydro,$event)\"></mat-checkbox>\n            </th>\n            <td>{{hydro.stationname}}</td>\n            <td>{{hydro.munic}}</td>\n            <td>{{hydro.district}}</td>\n            <td>{{hydro.region}}</td>\n            <td>{{hydro.value}} {{hydro.mu}}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n\n    </div>\n\n  </div>\n</div>\n\n\n\n\n", styles: [".section-disabled{opacity:.3;pointer-events:none}.col-wrapper{background-color:#f5f5f5;border-radius:4px}.rainMap{display:flex}.item-list-big-bull{min-width:25px;min-height:25px;max-width:25px;max-height:25px;border-radius:50%;background-color:#0266cc;color:#fff;display:flex;justify-content:center;align-items:center;font-size:1.2em;font-weight:600;margin-right:8px;margin-top:14px}.del-btn-wrapper{padding-top:16px;width:25px}.del-btn-wrapper .del-btn{cursor:pointer;color:gray}.del-btn-wrapper .del-btn:hover{color:#2f4f4f}.table-input-wrapper{position:relative}.table-input-wrapper:after{position:absolute;right:5px;top:50%;transform:translateY(-50%);content:\"\\f002\";font-family:\"Font Awesome 5 Free\";font-weight:900;color:gray}.table-filter{border-radius:4px;border:solid 1px lightgray;padding-right:20px;width:100px}:host ::ng-deep .col-wrapper .mat-form-field-infix{width:auto!important}table tbody{display:block;height:200px;overflow:auto}table thead,tbody tr{display:table;width:100%;table-layout:fixed}table thead{width:calc(100% - 1em)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ReporterService }, { type: i2.GeographicService }, { type: i3.SnackbarService }]; }, propDecorators: { previousReport: [{
                type: Input
            }], previousReportChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,